################################################################
## Packages / Groups / People
################################################################

################################################
## Customize
################################################

homeassistant:
  customize:
    ################################################
    ## Node Anchors
    ################################################

    package.node_anchors:
      customize: &customize
        package: 'groups/people'

      expose: &expose
        <<: *customize
        haaska_hidden: false

    device_tracker.bruce_phone:
      <<: *customize
      friendly_name: "Bruce (Android)"
      icon: mdi:cellphone-android

    device_tracker.chris_phone:
      <<: *customize
      friendly_name: "Chris (Android)"
      icon: mdi:cellphone-android

    device_tracker.teresa_phone:
      <<: *customize
      friendly_name: "Teresa (iPhone)"
      icon: mdi:cellphone-iphone

    group.guests:
      <<: *customize
      friendly_name: "Guests"
      icon: mdi:human-male-female
      order: 2

    group.guests_source:
      <<: *customize
      friendly_name: "Guests"
      hidden: true
    
    group.household_members:
      <<: *customize
      friendly_name: "Household"
      icon: mdi:human-male-female
      order: 1

    group.household_members_source:
      <<: *customize
      friendly_name: "Household"
      hidden: true
    
    sensor.kennady_location:
      <<: *customize
      friendly_name: "Kennady"
      icon: mdi:human-female

    sensor.cassie_location:
      <<: *customize
      friendly_name: "Cassie"
      icon: mdi:human-female

    sensor.mikayla_location:
      <<: *customize
      friendly_name: "MiKayla"
      icon: mdi:human-female

    sensor.brandon_location:
      <<: *customize
      friendly_name: "Brandon"
      icon: mdi:human-male

    sensor.erin_location:
      <<: *customize
      friendly_name: "Erin"
      icon: mdi:human-female

    sensor.corey_location:
      <<: *customize
      friendly_name: "Corey"
      icon: mdi:human-male

    sensor.bruce_location:
      <<: *customize
      friendly_name: "Bruce"
      icon: mdi:human-male

    sensor.chris_location:
      <<: *customize
      friendly_name: "Chris"
      icon: mdi:human-male
    
    sensor.teresa_location:
      <<: *customize
      friendly_name: "Teresa"
      icon: mdi:human-female

    automation.guests_visit:
      <<: *customize
      friendly_name: "Guests Visit"
    
    automation.people_leaving_home:
      <<: *customize
      friendly_name: "People Leaving Home"

    automation.people_returning_home:
      <<: *customize
      friendly_name: "People Returning Home"

################################################
## Group
################################################
group:
  guests:
    control: hidden
    entities:
      - sensor.cassie_location
      - sensor.corey_location
      - sensor.kennady_location
      - sensor.mikayla_location
      - sensor.brandon_location
      - sensor.erin_location

  guests_source:
    control: hidden
    entities:
      - device_tracker.cassie_phone
      - device_tracker.corey_phone
      - device_tracker.kennady_phone
      - device_tracker.mikayla_phone
      - device_tracker.brandon_phone
      - device_tracker.erin_phone

  household_members:
    control: hidden
    entities:
      - sensor.chris_location
      - sensor.teresa_location
      - sensor.bruce_location
  
  household_members_source:
    control: hidden
    entities:
      - device_tracker.chris_phone
      - device_tracker.teresa_phone
      - device_tracker.bruce_phone

################################################
## Sensor
################################################
sensor:
  - platform: google_geocode
    origin: device_tracker.chris_phone
    options: street, city
    name: chris_google_location
    api_key: !secret google_api_key

  - platform: google_geocode
    origin: device_tracker.teresa_phone
    options: street, city
    name: teresa_google_location
    api_key: !secret google_api_key

  - platform: google_geocode
    origin: device_tracker.bruce_phone
    options: street, city
    name: bruce_google_location
    api_key: !secret google_api_key

  - platform: mqtt
    state_topic: "household/location/chris"
    name: chris_house_location
    value_template: '{{ value_json.location }}'

  - platform: template
    sensors:
      kennady_location:
        value_template: "{{'Visiting' if is_state('device_tracker.kennady_phone', 'home') else 'Away'}}"
      
      corey_location:
        value_template: "{{'Visiting' if is_state('device_tracker.corey_phone', 'home') else 'Away'}}"
      
      mikayla_location:
        value_template: "{{'Visiting' if is_state('device_tracker.mikayla_phone', 'home') else 'Away'}}"
      
      cassie_location:
        value_template: "{{'Visiting' if is_state('device_tracker.cassie_phone', 'home') else 'Away'}}"

      brandon_location:
        value_template: "{{'Visiting' if is_state('device_tracker.brandon_phone', 'home') else 'Away'}}"
      
      erin_location:
        value_template: "{{'Visiting' if is_state('device_tracker.erin_phone', 'home') else 'Away'}}"

      chris_location:
        value_template: >
          {%- if is_state('device_tracker.chris_phone', 'home') -%}
            {%- if is_state('sensor.chris_house_location', 'unknown') -%}
              Home
            {%- else -%}
              {{ states.sensor.chris_house_location.state }}
            {%- endif -%}
          {%- else -%}
            {% if is_state('sensor.chris_google_location', 'Awaiting Update') -%}
              Away
            {%- else -%}
              {{ states.sensor.chris_google_location.attributes['Street'] }} {{ states.sensor.chris_google_location.attributes['City'] }}, {{ states.sensor.chris_google_location.attributes['State'] }}
            {%- endif -%}
          {%- endif -%}

      teresa_location:
        value_template: >
          {%- if is_state('device_tracker.teresa_phone', 'home') -%}
            Home
          {%- else -%}
            {% if is_state('sensor.teresa_google_location', 'Awaiting Update') -%}
              Away
            {%- else -%}
              {{ states.sensor.teresa_google_location.attributes['Street'] }} {{ states.sensor.teresa_google_location.attributes['City'] }}, {{ states.sensor.teresa_google_location.attributes['State'] }}
            {%- endif -%}
          {%- endif -%}

      bruce_location:
        value_template: >
          {%- if is_state('device_tracker.bruce_phone', 'home') -%}
            Home
          {%- else -%}
            {% if is_state('sensor.bruce_google_location', 'Awaiting Update') -%}
              Away
            {%- else -%}
              {{ states.sensor.bruce_google_location.attributes['Street'] }} {{ states.sensor.bruce_google_location.attributes['City'] }}, {{ states.sensor.bruce_google_location.attributes['State'] }}
            {%- endif -%}
          {%- endif -%}

################################################
## Automations
################################################
automation:
  - alias: people_leaving_home
    initial_state: true
    trigger:
      - platform: state
        from: 'home'
        to: 'not_home'
        for:
          minutes: 1
        entity_id: device_tracker.chris_phone, device_tracker.teresa_phone, device_tracker.bruce_phone
    action:
      - service: script.notify_discord
        data_template:
          message: >-
            {{ trigger.to_state.attributes.friendly_name.split(' ')[0] }} has left home.

  - alias: people_returning_home
    initial_state: true
    trigger:
      - platform: state
        from: 'not_home'
        to: 'home'
        for:
          minutes: 1
        entity_id: device_tracker.chris_phone, device_tracker.teresa_phone, device_tracker.bruce_phone
    action:
      - service: script.notify_discord
        data_template:
          message: >-
            {{ trigger.to_state.attributes.friendly_name.split(' ')[0] }} has returned home.
      - service: script.notify_all
        data_template:
          message: >-
            {{ trigger.to_state.attributes.friendly_name.split(' ')[0] }} is home

  - alias: guests_visit
    initial_state: true
    trigger:
      - platform: state
        from: 'not_home'
        to: 'home'
        for:
          minutes: 1
        entity_id: 
          - device_tracker.cassie_phone
          - device_tracker.corey_phone
          - device_tracker.kennady_phone
          - device_tracker.mikayla_phone
          - device_tracker.brandon_phone
          - device_tracker.erin_phone
    action:
      - service: script.notify_discord
        data_template:
          message: >-
            {{ trigger.to_state.attributes.friendly_name.split(' ')[0] }} is visiting.
      - service: script.notify_all
        data_template:
          message: >-
            {{ trigger.to_state.attributes.friendly_name.split(' ')[0] }} is visiting

##################################################
## Intent Scripts
##################################################
intent_script:
  # Locate certain person
  LocateIntent:
    speech:
      text: >
        {% if states['sensor'][User + '_location'] %}
          {{ User }} is currently at {{ states['sensor'][User + '_location'].state }}
        {% else %}
          The person you seek doesn't seem to exist.
        {% endif %}
    card:
      type: simple
      title: Home Assistant - Household Member Location
      content: >
        {% if states['sensor'][User + '_location'] %}
          {{ User }} is currently at {{ states['sensor'][User + '_location'].state }}
        {% else %}
          The person you seek doesn't seem to exist.
        {% endif %}

  # Give status of household members
  WhereAreWeIntent:
    speech:
      text: >
        {%- if is_state('device_tracker.bruce_phone', 'home') and is_state('device_tracker.chris_phone', 'home') and is_state('device_tracker.teresa_phone', 'home') -%}
          Everyone is currently home.
        {%- else -%}
          {%- set comma = joiner('. ') -%}
          {%- set entities = states.group.household_members.attributes.entity_id -%}
          I pulled the latest data for you, here is the last known location of everyone.
          {{- ' ' -}}
          {%- for entity_id in entities -%}
            {%- set entity_parts = entity_id.split('.') -%}
            {%- set entity = states[entity_parts[0]][entity_parts[1]] -%}
            {{- comma() -}}
            {{- entity.name.split(' ')[0]  }} is currently at {{ entity.state -}}
          {%- endfor -%}
        {% endif %}
    card:
      type: simple
      title: Home Assistant - Current Locations
      content: >
        {%- if is_state('device_tracker.bruce_phone', 'home') and is_state('device_tracker.chris_phone', 'home') and is_state('device_tracker.teresa_phone', 'home') -%}
          Everyone is currently home.
        {%- else -%}
          {%- set comma = joiner('\n') -%}
          {%- set entities = states.group.household_members.attributes.entity_id -%}
          Current Locations:
          {{- '\n' -}}
          {%- for entity_id in entities -%}
            {%- set entity_parts = entity_id.split('.') -%}
            {%- set entity = states[entity_parts[0]][entity_parts[1]] -%}
            {{- comma() -}}
            {{- entity.name.split(' ')[0]  }} - {{ entity.state -}}
          {%- endfor -%}
        {% endif %}


  # List off who is currently at home
  WhosHomeIntent:
    speech:
      text: >
        {%- if is_state('device_tracker.bruce_phone', 'home') and is_state('device_tracker.chris_phone', 'home') and is_state('device_tracker.teresa_phone', 'home') -%}
          Everyone is currently home.
        {%- elif is_state('states.group.people.state', 'not_home') -%}
          The house is currently empty.  Should I be worried that you're talking to me?
        {%- else -%}
          {%- set comma = joiner(', ') -%}
          {%- set entities = states.group.household_members_source.attributes.entity_id -%}
          There are a few people home, they are
          {{- ' ' -}}
          {%- for entity_id in entities if is_state(entity_id, 'home') -%}
            {%- set entity_parts = entity_id.split('.') -%}
            {%- set entity = states[entity_parts[0]][entity_parts[1]] -%}
            {{- comma() -}}
            {% if loop.first and loop.last %}{% elif loop.last %}and {% endif %}
            {{- entity.name.split(' ')[0]  -}}
          {%- endfor -%}
        {%- endif -%}
    card:
      type: simple
      title: "Home Assistant - Who's home"
      content: >
        {%- if is_state('device_tracker.bruce_phone', 'home') and is_state('device_tracker.chris_phone', 'home') and is_state('device_tracker.teresa_phone', 'home') -%}
          Everyone is currently home.
        {%- elif is_state('states.group.people.state', 'not_home') -%}
          The house is currently empty.  Should I be worried that you're talking to me?
        {%- else -%}
          {%- set comma = joiner('\n') -%}
          {%- set entities = states.group.household_members_source.attributes.entity_id -%}
          Currently Home:
          {{- '\n' -}}
          {%- for entity_id in entities if is_state(entity_id, 'home') -%}
            {%- set entity_parts = entity_id.split('.') -%}
            {%- set entity = states[entity_parts[0]][entity_parts[1]] -%}
            {{- comma() -}}
            {{- entity.name.split(' ')[0]  -}}
          {%- endfor -%}
        {%- endif -%}

  # Guests visiting
  WhosVisitingIntent:
    speech:
      text: >
        {% if is_state('group.guests_source', 'not_home') %}
          There are currently no guests visiting.
        {% else %}
          {%- set comma = joiner(', ') -%}
          {%- set entities = states.group.guests_source.attributes.entity_id -%}
          Guests currently visiting include 
          {{- ' ' -}}
          {%- for entity_id in entities if is_state(entity_id, 'home') -%}
            {%- set entity_parts = entity_id.split('.') -%}
            {%- set entity = states[entity_parts[0]][entity_parts[1]] -%}
            {{- comma() -}}
            {% if loop.first and loop.last %}{% elif loop.last %}and {% endif %}
            {{- entity.name.split(' ')[0]  -}}
          {%- endfor -%}
        {% endif %}
    card:
      type: simple
      title: "Home Assistant - Current Guests"
      content: >
        {% if is_state('group.guests_source', 'not_home') %}
          There are currently no guests visiting.
        {% else %}
          {%- set comma = joiner('\n') -%}
          {%- set entities = states.group.guests_source.attributes.entity_id -%}
          Guests currently visiting:
          {{- '\n' -}}
          {%- for entity_id in entities if is_state(entity_id, 'home') -%}
            {%- set entity_parts = entity_id.split('.') -%}
            {%- set entity = states[entity_parts[0]][entity_parts[1]] -%}
            {{- comma() -}}
            {{- entity.name.split(' ')[0]  -}}
          {%- endfor -%}
        {% endif %}