{"version":3,"sources":["webpack:///./node_modules/@polymer/paper-checkbox/paper-checkbox.js","webpack:///./src/components/entity/ha-entity-picker.js","webpack:///./src/panels/dev-state/ha-panel-dev-state.js"],"names":["_polymer_paper_behaviors_paper_inky_focus_behavior_js__WEBPACK_IMPORTED_MODULE_5__","__webpack_require__","$_documentContainer","document","createElement","setAttribute","innerHTML","head","appendChild","content","Object","_polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_3__","a","is","behaviors","_polymer_paper_behaviors_paper_checked_element_behavior_js__WEBPACK_IMPORTED_MODULE_2__","hostAttributes","role","aria-checked","tabindex","properties","ariaActiveAttribute","type","String","value","attached","_polymer_polymer_lib_utils_render_status_js__WEBPACK_IMPORTED_MODULE_4__","this","getComputedStyleValue","trim","checkboxSizeText","units","unitsMatches","match","checkboxSize","parseFloat","defaultInkSize","Math","floor","updateStyles","--paper-checkbox-ink-size","_computeCheckboxClass","checked","invalid","className","_computeCheckmarkClass","_createRipple","_rippleContainer","$","checkboxContainer","b","call","HaEntityPicker","_mixins_events_mixin_js__WEBPACK_IMPORTED_MODULE_10__","_mixins_localize_mixin_js__WEBPACK_IMPORTED_MODULE_9__","_polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_5__","_createClass","key","label","localize","hass","domainFilter","entityFilter","entityIds","keys","states","filter","eid","substr","indexOf","entities","sort","map","state","_common_entity_compute_state_name_js__WEBPACK_IMPORTED_MODULE_8__","newVal","_hass","opened","ev","stopPropagation","fire","get","_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_4__","_templateObject","allowCustomEntity","Boolean","observer","_states","Array","computed","autofocus","notify","Function","disabled","customElements","define","HaPanelDevState","_mixins_events_mixin_js__WEBPACK_IMPORTED_MODULE_12__","_polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_8__","model","entity","_entityId","entity_id","_state","_stateAttributes","JSON","stringify","attributes","preventDefault","entityId","attr","attrRaw","replace","parse","err","alert","callApi","_entityFilter","_stateFilter","_attributeFilter","includes","toLowerCase","attributeFilter","colonIndex","multiMode","keyFilter","valueFilter","substring","attributeKeys","i","length","attributeValue","entityA","entityB","_entities","narrow","_showAttributes","output","isArray","_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_7__","showMenu"],"mappings":"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","file":"bb9d947ff22dcdb43096.chunk.js","sourcesContent":["/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n/**\nMaterial design: [Checkbox](https://www.google.com/design/spec/components/selection-controls.html#selection-controls-checkbox)\n\n`paper-checkbox` is a button that can be either checked or unchecked.  User\ncan tap the checkbox to check or uncheck it.  Usually you use checkboxes\nto allow user to select multiple options from a set.  If you have a single\nON/OFF option, avoid using a single checkbox and use `paper-toggle-button`\ninstead.\n\nExample:\n\n    <paper-checkbox>label</paper-checkbox>\n\n    <paper-checkbox checked> label</paper-checkbox>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-checkbox-unchecked-background-color` | Checkbox background color when the input is not checked | `transparent`\n`--paper-checkbox-unchecked-color` | Checkbox border color when the input is not checked | `--primary-text-color`\n`--paper-checkbox-unchecked-ink-color` | Selected/focus ripple color when the input is not checked | `--primary-text-color`\n`--paper-checkbox-checked-color` | Checkbox color when the input is checked | `--primary-color`\n`--paper-checkbox-checked-ink-color` | Selected/focus ripple color when the input is checked | `--primary-color`\n`--paper-checkbox-checkmark-color` | Checkmark color | `white`\n`--paper-checkbox-label-color` | Label color | `--primary-text-color`\n`--paper-checkbox-label-checked-color` | Label color when the input is checked | `--paper-checkbox-label-color`\n`--paper-checkbox-label-spacing` | Spacing between the label and the checkbox | `8px`\n`--paper-checkbox-label` | Mixin applied to the label | `{}`\n`--paper-checkbox-label-checked` | Mixin applied to the label when the input is checked | `{}`\n`--paper-checkbox-error-color` | Checkbox color when invalid | `--error-color`\n`--paper-checkbox-size` | Size of the checkbox | `18px`\n`--paper-checkbox-ink-size` | Size of the ripple | `48px`\n`--paper-checkbox-margin` | Margin around the checkbox container | `initial`\n`--paper-checkbox-vertical-align` | Vertical alignment of the checkbox container | `middle`\n\nThis element applies the mixin `--paper-font-common-base` but does not import `paper-styles/typography.html`.\nIn order to apply the `Roboto` font to this element, make sure you've imported `paper-styles/typography.html`.\n\n@demo demo/index.html\n*/\n/*\n  FIXME(polymer-modulizer): the above comments were extracted\n  from HTML and may be out of place here. Review them and\n  then delete this comment!\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport '@polymer/paper-styles/default-theme.js';\nimport { PaperCheckedElementBehavior } from '@polymer/paper-behaviors/paper-checked-element-behavior.js';\nimport { Polymer } from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport { afterNextRender } from '@polymer/polymer/lib/utils/render-status.js';\nimport { PaperInkyFocusBehaviorImpl } from '@polymer/paper-behaviors/paper-inky-focus-behavior.js';\nconst $_documentContainer = document.createElement('template');\n$_documentContainer.setAttribute('style', 'display: none;');\n\n$_documentContainer.innerHTML = `<dom-module id=\"paper-checkbox\">\n  <template strip-whitespace=\"\">\n    <style>\n      :host {\n        display: inline-block;\n        white-space: nowrap;\n        cursor: pointer;\n        --calculated-paper-checkbox-size: var(--paper-checkbox-size, 18px);\n        /* -1px is a sentinel for the default and is replaced in \\`attached\\`. */\n        --calculated-paper-checkbox-ink-size: var(--paper-checkbox-ink-size, -1px);\n        @apply --paper-font-common-base;\n        line-height: 0;\n        -webkit-tap-highlight-color: transparent;\n      }\n\n      :host([hidden]) {\n        display: none !important;\n      }\n\n      :host(:focus) {\n        outline: none;\n      }\n\n      .hidden {\n        display: none;\n      }\n\n      #checkboxContainer {\n        display: inline-block;\n        position: relative;\n        width: var(--calculated-paper-checkbox-size);\n        height: var(--calculated-paper-checkbox-size);\n        min-width: var(--calculated-paper-checkbox-size);\n        margin: var(--paper-checkbox-margin, initial);\n        vertical-align: var(--paper-checkbox-vertical-align, middle);\n        background-color: var(--paper-checkbox-unchecked-background-color, transparent);\n      }\n\n      #ink {\n        position: absolute;\n\n        /* Center the ripple in the checkbox by negative offsetting it by\n         * (inkWidth - rippleWidth) / 2 */\n        top: calc(0px - (var(--calculated-paper-checkbox-ink-size) - var(--calculated-paper-checkbox-size)) / 2);\n        left: calc(0px - (var(--calculated-paper-checkbox-ink-size) - var(--calculated-paper-checkbox-size)) / 2);\n        width: var(--calculated-paper-checkbox-ink-size);\n        height: var(--calculated-paper-checkbox-ink-size);\n        color: var(--paper-checkbox-unchecked-ink-color, var(--primary-text-color));\n        opacity: 0.6;\n        pointer-events: none;\n      }\n\n      #ink:dir(rtl) {\n        right: calc(0px - (var(--calculated-paper-checkbox-ink-size) - var(--calculated-paper-checkbox-size)) / 2);\n        left: auto;\n      }\n\n      #ink[checked] {\n        color: var(--paper-checkbox-checked-ink-color, var(--primary-color));\n      }\n\n      #checkbox {\n        position: relative;\n        box-sizing: border-box;\n        height: 100%;\n        border: solid 2px;\n        border-color: var(--paper-checkbox-unchecked-color, var(--primary-text-color));\n        border-radius: 2px;\n        pointer-events: none;\n        -webkit-transition: background-color 140ms, border-color 140ms;\n        transition: background-color 140ms, border-color 140ms;\n      }\n\n      /* checkbox checked animations */\n      #checkbox.checked #checkmark {\n        -webkit-animation: checkmark-expand 140ms ease-out forwards;\n        animation: checkmark-expand 140ms ease-out forwards;\n      }\n\n      @-webkit-keyframes checkmark-expand {\n        0% {\n          -webkit-transform: scale(0, 0) rotate(45deg);\n        }\n        100% {\n          -webkit-transform: scale(1, 1) rotate(45deg);\n        }\n      }\n\n      @keyframes checkmark-expand {\n        0% {\n          transform: scale(0, 0) rotate(45deg);\n        }\n        100% {\n          transform: scale(1, 1) rotate(45deg);\n        }\n      }\n\n      #checkbox.checked {\n        background-color: var(--paper-checkbox-checked-color, var(--primary-color));\n        border-color: var(--paper-checkbox-checked-color, var(--primary-color));\n      }\n\n      #checkmark {\n        position: absolute;\n        width: 36%;\n        height: 70%;\n        border-style: solid;\n        border-top: none;\n        border-left: none;\n        border-right-width: calc(2/15 * var(--calculated-paper-checkbox-size));\n        border-bottom-width: calc(2/15 * var(--calculated-paper-checkbox-size));\n        border-color: var(--paper-checkbox-checkmark-color, white);\n        -webkit-transform-origin: 97% 86%;\n        transform-origin: 97% 86%;\n        box-sizing: content-box; /* protect against page-level box-sizing */\n      }\n\n      #checkmark:dir(rtl) {\n        -webkit-transform-origin: 50% 14%;\n        transform-origin: 50% 14%;\n      }\n\n      /* label */\n      #checkboxLabel {\n        position: relative;\n        display: inline-block;\n        vertical-align: middle;\n        padding-left: var(--paper-checkbox-label-spacing, 8px);\n        white-space: normal;\n        line-height: normal;\n        color: var(--paper-checkbox-label-color, var(--primary-text-color));\n        @apply --paper-checkbox-label;\n      }\n\n      :host([checked]) #checkboxLabel {\n        color: var(--paper-checkbox-label-checked-color, var(--paper-checkbox-label-color, var(--primary-text-color)));\n        @apply --paper-checkbox-label-checked;\n      }\n\n      #checkboxLabel:dir(rtl) {\n        padding-right: var(--paper-checkbox-label-spacing, 8px);\n        padding-left: 0;\n      }\n\n      #checkboxLabel[hidden] {\n        display: none;\n      }\n\n      /* disabled state */\n\n      :host([disabled]) #checkbox {\n        opacity: 0.5;\n        border-color: var(--paper-checkbox-unchecked-color, var(--primary-text-color));\n      }\n\n      :host([disabled][checked]) #checkbox {\n        background-color: var(--paper-checkbox-unchecked-color, var(--primary-text-color));\n        opacity: 0.5;\n      }\n\n      :host([disabled]) #checkboxLabel  {\n        opacity: 0.65;\n      }\n\n      /* invalid state */\n      #checkbox.invalid:not(.checked) {\n        border-color: var(--paper-checkbox-error-color, var(--error-color));\n      }\n    </style>\n\n    <div id=\"checkboxContainer\">\n      <div id=\"checkbox\" class\\$=\"[[_computeCheckboxClass(checked, invalid)]]\">\n        <div id=\"checkmark\" class\\$=\"[[_computeCheckmarkClass(checked)]]\"></div>\n      </div>\n    </div>\n\n    <div id=\"checkboxLabel\"><slot></slot></div>\n  </template>\n\n  \n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\nPolymer({\n  is: 'paper-checkbox',\n\n  behaviors: [PaperCheckedElementBehavior],\n\n  /** @private */\n  hostAttributes: {role: 'checkbox', 'aria-checked': false, tabindex: 0},\n\n  properties: {\n    /**\n     * Fired when the checked state changes due to user interaction.\n     *\n     * @event change\n     */\n\n    /**\n     * Fired when the checked state changes.\n     *\n     * @event iron-change\n     */\n    ariaActiveAttribute: {type: String, value: 'aria-checked'}\n  },\n\n  attached: function() {\n    // Wait until styles have resolved to check for the default sentinel.\n    // See polymer#4009 for more details.\n    afterNextRender(this, function() {\n      var inkSize =\n          this.getComputedStyleValue('--calculated-paper-checkbox-ink-size')\n              .trim();\n      // If unset, compute and set the default `--paper-checkbox-ink-size`.\n      if (inkSize === '-1px') {\n        var checkboxSizeText =\n            this.getComputedStyleValue('--calculated-paper-checkbox-size')\n                .trim();\n\n        var units = 'px';\n        var unitsMatches = checkboxSizeText.match(/[A-Za-z]+$/);\n        if (unitsMatches !== null) {\n          units = unitsMatches[0];\n        }\n\n        var checkboxSize = parseFloat(checkboxSizeText);\n        var defaultInkSize = (8 / 3) * checkboxSize;\n\n        if (units === 'px') {\n          defaultInkSize = Math.floor(defaultInkSize);\n\n          // The checkbox and ripple need to have the same parity so that their\n          // centers align.\n          if (defaultInkSize % 2 !== checkboxSize % 2) {\n            defaultInkSize++;\n          }\n        }\n\n        this.updateStyles({\n          '--paper-checkbox-ink-size': defaultInkSize + units,\n        });\n      }\n    });\n  },\n\n  _computeCheckboxClass: function(checked, invalid) {\n    var className = '';\n    if (checked) {\n      className += 'checked ';\n    }\n    if (invalid) {\n      className += 'invalid';\n    }\n    return className;\n  },\n\n  _computeCheckmarkClass: function(checked) {\n    return checked ? '' : 'hidden';\n  },\n\n  // create ripple inside the checkboxContainer\n  _createRipple: function() {\n    this._rippleContainer = this.$.checkboxContainer;\n    return PaperInkyFocusBehaviorImpl._createRipple.call(this);\n  }\n\n});\n","import '@polymer/paper-icon-button/paper-icon-button.js';\nimport '@polymer/paper-input/paper-input.js';\nimport '@polymer/paper-item/paper-icon-item.js';\nimport '@polymer/paper-item/paper-item-body.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport '@vaadin/vaadin-combo-box/vaadin-combo-box-light.js';\n\n\nimport './state-badge.js';\n\nimport computeStateName from '../../common/entity/compute_state_name.js';\nimport LocalizeMixin from '../../mixins/localize-mixin.js';\nimport EventsMixin from '../../mixins/events-mixin.js';\n\n/*\n * @appliesMixin LocalizeMixin\n */\nclass HaEntityPicker extends EventsMixin(LocalizeMixin(PolymerElement)) {\n  static get template() {\n    return html`\n    <style>\n      paper-input > paper-icon-button {\n        width: 24px;\n        height: 24px;\n        padding: 2px;\n        color: var(--secondary-text-color);\n      }\n      [hidden] {\n        display: none;\n      }\n    </style>\n    <vaadin-combo-box-light\n      items=\"[[_states]]\"\n      item-value-path=\"entity_id\"\n      item-label-path=\"entity_id\"\n      value=\"{{value}}\"\n      opened=\"{{opened}}\"\n      allow-custom-value=\"[[allowCustomEntity]]\"\n      on-change='_fireChanged'\n    >\n      <paper-input autofocus=\"[[autofocus]]\" label=\"[[_computeLabel(label, localize)]]\" class=\"input\" value=\"[[value]]\" disabled=\"[[disabled]]\">\n        <paper-icon-button slot=\"suffix\" class=\"clear-button\" icon=\"hass:close\" no-ripple=\"\" hidden\\$=\"[[!value]]\">Clear</paper-icon-button>\n        <paper-icon-button slot=\"suffix\" class=\"toggle-button\" icon=\"[[_computeToggleIcon(opened)]]\" hidden=\"[[!_states.length]]\">Toggle</paper-icon-button>\n      </paper-input>\n      <template>\n        <style>\n          paper-icon-item {\n            margin: -10px;\n          }\n        </style>\n        <paper-icon-item>\n          <state-badge state-obj=\"[[item]]\" slot=\"item-icon\"></state-badge>\n          <paper-item-body two-line=\"\">\n            <div>[[_computeStateName(item)]]</div>\n            <div secondary=\"\">[[item.entity_id]]</div>\n          </paper-item-body>\n        </paper-icon-item>\n      </template>\n    </vaadin-combo-box-light>\n`;\n  }\n\n  static get properties() {\n    return {\n      allowCustomEntity: {\n        type: Boolean,\n        value: false,\n      },\n      hass: {\n        type: Object,\n        observer: '_hassChanged',\n      },\n      _hass: Object,\n      _states: {\n        type: Array,\n        computed: '_computeStates(_hass, domainFilter, entityFilter)',\n      },\n      autofocus: Boolean,\n      label: {\n        type: String,\n      },\n      value: {\n        type: String,\n        notify: true,\n      },\n      opened: {\n        type: Boolean,\n        value: false,\n        observer: '_openedChanged',\n      },\n      domainFilter: {\n        type: String,\n        value: null,\n      },\n      entityFilter: {\n        type: Function,\n        value: null,\n      },\n      disabled: Boolean,\n    };\n  }\n\n  _computeLabel(label, localize) {\n    return label === undefined\n      ? localize('ui.components.entity.entity-picker.entity')\n      : label;\n  }\n\n  _computeStates(hass, domainFilter, entityFilter) {\n    if (!hass) return [];\n\n    let entityIds = Object.keys(hass.states);\n\n    if (domainFilter) {\n      entityIds = entityIds.filter(eid => eid.substr(0, eid.indexOf('.')) === domainFilter);\n    }\n\n    let entities = entityIds.sort().map(key => hass.states[key]);\n\n    if (entityFilter) {\n      entities = entities.filter(entityFilter);\n    }\n\n    return entities;\n  }\n\n  _computeStateName(state) {\n    return computeStateName(state);\n  }\n\n  _openedChanged(newVal) {\n    if (!newVal) {\n      this._hass = this.hass;\n    }\n  }\n\n  _hassChanged(newVal) {\n    if (!this.opened) {\n      this._hass = newVal;\n    }\n  }\n\n  _computeToggleIcon(opened) {\n    return opened ? 'hass:menu-up' : 'hass:menu-down';\n  }\n\n  _fireChanged(ev) {\n    ev.stopPropagation();\n    this.fire('change');\n  }\n}\n\ncustomElements.define('ha-entity-picker', HaEntityPicker);\n","import '@polymer/app-layout/app-header-layout/app-header-layout.js';\nimport '@polymer/app-layout/app-header/app-header.js';\nimport '@polymer/app-layout/app-toolbar/app-toolbar.js';\nimport '@polymer/paper-button/paper-button.js';\nimport '@polymer/paper-checkbox/paper-checkbox.js';\nimport '@polymer/paper-input/paper-input.js';\nimport '@polymer/paper-input/paper-textarea.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport '../../components/entity/ha-entity-picker.js';\nimport '../../components/ha-menu-button.js';\nimport '../../resources/ha-style.js';\nimport EventsMixin from '../../mixins/events-mixin.js';\n\n/*\n * @appliesMixin EventsMixin\n */\nclass HaPanelDevState extends EventsMixin(PolymerElement) {\n  static get template() {\n    return html`\n    <style include=\"ha-style\">\n      :host {\n        -ms-user-select: initial;\n        -webkit-user-select: initial;\n        -moz-user-select: initial;\n      }\n\n      .content {\n        padding: 16px;\n      }\n\n      ha-entity-picker, .state-input, paper-textarea {\n        display: block;\n        max-width: 400px;\n      }\n\n      .entities th {\n        text-align: left;\n      }\n\n      .entities tr {\n        vertical-align: top;\n      }\n\n      .entities tr:nth-child(odd) {\n        background-color: var(--table-row-background-color, #fff)\n      }\n\n      .entities tr:nth-child(even) {\n        background-color: var(--table-row-alternative-background-color, #eee)\n      }\n      .entities td {\n        padding: 4px;\n      }\n      .entities paper-icon-button {\n        height: 24px;\n        padding: 0;\n      }\n      .entities td:nth-child(3) {\n        white-space: pre-wrap;\n        word-break: break-word;\n      }\n\n      .entities a {\n        color: var(--primary-color);\n      }\n    </style>\n\n    <app-header-layout has-scrolling-region>\n      <app-header slot=\"header\" fixed>\n        <app-toolbar>\n          <ha-menu-button narrow='[[narrow]]' show-menu='[[showMenu]]'></ha-menu-button>\n          <div main-title>States</div>\n        </app-toolbar>\n      </app-header>\n\n      <div class='content'>\n        <div>\n          <p>\n            Set the representation of a device within Home Assistant.<br />\n            This will not communicate with the actual device.\n          </p>\n\n          <ha-entity-picker\n            autofocus\n            hass=\"[[hass]]\"\n            value=\"{{_entityId}}\"\n            allow-custom-entity\n          ></ha-entity-picker>\n          <paper-input\n            label=\"State\"\n            required\n            value='{{_state}}'\n            class='state-input'\n          ></paper-input>\n          <paper-textarea label=\"State attributes (JSON, optional)\" value='{{_stateAttributes}}'></paper-textarea>\n          <paper-button on-click='handleSetState' raised>Set State</paper-button>\n        </div>\n\n        <h1>Current entities</h1>\n        <table class='entities'>\n          <tr>\n            <th>Entity</th>\n            <th>State</th>\n            <th hidden$='[[narrow]]'>\n              Attributes\n              <paper-checkbox checked='{{_showAttributes}}'></paper-checkbox>\n            </th>\n          </tr>\n          <tr>\n            <th><paper-input label=\"Filter entities\" type=\"search\" value='{{_entityFilter}}'></paper-input></th>\n            <th><paper-input label=\"Filter states\" type=\"search\" value='{{_stateFilter}}'></paper-input></th>\n            <th hidden$='[[!computeShowAttributes(narrow, _showAttributes)]]'><paper-input label=\"Filter attributes\" type=\"search\" value='{{_attributeFilter}}'></paper-input></th>\n          </tr>\n          <tr hidden$='[[!computeShowEntitiesPlaceholder(_entities)]]'>\n            <td colspan=\"3\">No entities</td>\n          </tr>\n          <template is='dom-repeat' items='[[_entities]]' as='entity'>\n            <tr>\n              <td>\n                <paper-icon-button\n                  on-click='entityMoreInfo'\n                  icon='hass:open-in-new'\n                  alt=\"More Info\" title=\"More Info\"\n                  >\n                </paper-icon-button>\n                <a href='#' on-click='entitySelected'>[[entity.entity_id]]</a>\n              </td>\n              <td>[[entity.state]]</td>\n              <template is='dom-if' if='[[computeShowAttributes(narrow, _showAttributes)]]'>\n                <td>[[attributeString(entity)]]</td>\n              </template>\n            </tr>\n          </template>\n        </table>\n      </div>\n    </app-header-layout>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n      },\n\n      narrow: {\n        type: Boolean,\n        value: false,\n      },\n\n      showMenu: {\n        type: Boolean,\n        value: false,\n      },\n\n      _entityId: {\n        type: String,\n        value: '',\n      },\n\n      _entityFilter: {\n        type: String,\n        value: '',\n      },\n\n      _stateFilter: {\n        type: String,\n        value: '',\n      },\n\n      _attributeFilter: {\n        type: String,\n        value: '',\n      },\n\n      _state: {\n        type: String,\n        value: '',\n      },\n\n      _stateAttributes: {\n        type: String,\n        value: '',\n      },\n\n      _showAttributes: {\n        type: Boolean,\n        value: true,\n      },\n\n      _entities: {\n        type: Array,\n        computed: 'computeEntities(hass, _entityFilter, _stateFilter, _attributeFilter)',\n      },\n    };\n  }\n\n  entitySelected(ev) {\n    var state = ev.model.entity;\n    this._entityId = state.entity_id;\n    this._state = state.state;\n    this._stateAttributes = JSON.stringify(state.attributes, null, '  ');\n    ev.preventDefault();\n  }\n\n  entityMoreInfo(ev) {\n    ev.preventDefault();\n    this.fire('hass-more-info', { entityId: ev.model.entity.entity_id });\n  }\n\n  handleSetState() {\n    var attr;\n    var attrRaw = this._stateAttributes.replace(/^\\s+|\\s+$/g, '');\n    try {\n      attr = attrRaw ?\n        JSON.parse(attrRaw) : {};\n    } catch (err) {\n      /* eslint-disable no-alert */\n      alert('Error parsing JSON: ' + err);\n      /* eslint-enable no-alert */\n      return;\n    }\n\n    this.hass.callApi('POST', 'states/' + this._entityId, {\n      state: this._state,\n      attributes: attr,\n    });\n  }\n\n  computeEntities(hass, _entityFilter, _stateFilter, _attributeFilter) {\n    return Object.keys(hass.states).map(function (key) { return hass.states[key]; })\n      .filter(function (value) {\n        if (!value.entity_id.includes(_entityFilter.toLowerCase())) {\n          return false;\n        }\n\n        if (!value.state.includes(_stateFilter.toLowerCase())) {\n          return false;\n        }\n\n        if (_attributeFilter !== '') {\n          var attributeFilter = _attributeFilter.toLowerCase();\n          var colonIndex = attributeFilter.indexOf(':');\n          var multiMode = colonIndex !== -1;\n\n          var keyFilter = attributeFilter;\n          var valueFilter = attributeFilter;\n\n          if (multiMode) {\n            // we need to filter keys and values separately\n            keyFilter = attributeFilter.substring(0, colonIndex).trim();\n            valueFilter = attributeFilter.substring(colonIndex + 1).trim();\n          }\n\n          var attributeKeys = Object.keys(value.attributes);\n\n          for (var i = 0; i < attributeKeys.length; i++) {\n            var key = attributeKeys[i];\n\n            if (key.includes(keyFilter) && !multiMode) {\n              return true; // in single mode we're already satisfied with this match\n            } else if (!key.includes(keyFilter) && multiMode) {\n              continue;\n            }\n\n            var attributeValue = value.attributes[key];\n\n            if (attributeValue !== null\n                && JSON.stringify(attributeValue).toLowerCase().includes(valueFilter)) {\n              return true;\n            }\n          }\n\n          // there are no attributes where the key and/or value can be matched\n          return false;\n        }\n\n        return true;\n      })\n      .sort(function (entityA, entityB) {\n        if (entityA.entity_id < entityB.entity_id) {\n          return -1;\n        }\n        if (entityA.entity_id > entityB.entity_id) {\n          return 1;\n        }\n        return 0;\n      });\n  }\n\n  computeShowEntitiesPlaceholder(_entities) {\n    return _entities.length === 0;\n  }\n\n  computeShowAttributes(narrow, _showAttributes) {\n    return !narrow && _showAttributes;\n  }\n\n  attributeString(entity) {\n    var output = '';\n    var i;\n    var keys;\n    var key;\n    var value;\n\n    for (i = 0, keys = Object.keys(entity.attributes); i < keys.length; i++) {\n      key = keys[i];\n      value = entity.attributes[key];\n      if (!Array.isArray(value) && (value instanceof Object)) {\n        value = JSON.stringify(value, null, '  ');\n      }\n      output += key + ': ' + value + '\\n';\n    }\n\n    return output;\n  }\n}\n\ncustomElements.define('ha-panel-dev-state', HaPanelDevState);\n"],"sourceRoot":""}