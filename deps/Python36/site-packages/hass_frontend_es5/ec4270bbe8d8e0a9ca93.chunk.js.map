{"version":3,"sources":["webpack:///./node_modules/@polymer/paper-dialog-behavior/paper-dialog-behavior.js","webpack:///./node_modules/@polymer/paper-dialog-behavior/paper-dialog-shared-styles.js","webpack:///./src/mixins/dialog-mixin.js","webpack:///./src/dialogs/ha-voice-command-dialog.js"],"names":["_polymer_polymer_lib_legacy_polymer_dom_js__WEBPACK_IMPORTED_MODULE_2__","__webpack_require__","PaperDialogBehaviorImpl","hostAttributes","role","tabindex","properties","modal","type","Boolean","value","__readied","observers","listeners","tap","ready","this","__prevNoCancelOnOutsideClick","noCancelOnOutsideClick","__prevNoCancelOnEscKey","noCancelOnEscKey","__prevWithBackdrop","withBackdrop","_modalChanged","readied","_updateClosingReasonConfirmed","confirmed","closingReason","_onDialogClick","event","path","Object","b","i","l","indexOf","target","hasAttribute","close","stopPropagation","PaperDialogBehavior","_polymer_iron_overlay_behavior_iron_overlay_behavior_js__WEBPACK_IMPORTED_MODULE_1__","a","$_documentContainer","document","createElement","setAttribute","innerHTML","head","appendChild","content","__webpack_exports__","_polymer_polymer_lib_utils_mixin_js__WEBPACK_IMPORTED_MODULE_0__","superClass","_mixinBehaviors","_class","instance","Constructor","TypeError","__proto__","getPrototypeOf","apply","arguments","subClass","prototype","create","constructor","enumerable","writable","configurable","setPrototypeOf","_polymer_polymer_lib_legacy_class_js__WEBPACK_IMPORTED_MODULE_2__","_events_mixin__WEBPACK_IMPORTED_MODULE_3__","_polymer_paper_dialog_behavior_paper_dialog_behavior_js__WEBPACK_IMPORTED_MODULE_1__","_createClass","key","get","290","module","r","strings","raw","_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_3__","_polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_4__","_mixins_dialog_mixin_js__WEBPACK_IMPORTED_MODULE_5__","defineProperties","props","length","descriptor","defineProperty","protoProps","staticProps","_templateObject","freeze","HaVoiceCommandDialog","recognition","webkitSpeechRecognition","onstart","results","final","interim","bind","onerror","abort","text","push","who","error","onend","hass","callApi","then","response","speech","plain","set","_conversation","onresult","oldResults","finalTranscript","interimTranscript","ind","resultIndex","isFinal","transcript","initRecognition","start","_this2","setTimeout","$","messages","scrollTop","scrollHeight","dialog","fire","newVal","startListening","message","observer","Array","customElements","define"],"mappings":"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","file":"ec4270bbe8d8e0a9ca93.chunk.js","sourcesContent":["/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport { IronOverlayBehavior } from '@polymer/iron-overlay-behavior/iron-overlay-behavior.js';\nimport { dom } from '@polymer/polymer/lib/legacy/polymer.dom.js';\n\n/**\n  Use `Polymer.PaperDialogBehavior` and `paper-dialog-shared-styles.html` to\n  implement a Material Design dialog.\n\n  For example, if `<paper-dialog-impl>` implements this behavior:\n\n      <paper-dialog-impl>\n          <h2>Header</h2>\n          <div>Dialog body</div>\n          <div class=\"buttons\">\n              <paper-button dialog-dismiss>Cancel</paper-button>\n              <paper-button dialog-confirm>Accept</paper-button>\n          </div>\n      </paper-dialog-impl>\n\n  `paper-dialog-shared-styles.html` provide styles for a header, content area, and\n  an action area for buttons. Use the `<h2>` tag for the header and the `buttons`\n  class for the action area. You can use the `paper-dialog-scrollable` element (in\n  its own repository) if you need a scrolling content area.\n\n  Use the `dialog-dismiss` and `dialog-confirm` attributes on interactive controls\n  to close the dialog. If the user dismisses the dialog with `dialog-confirm`, the\n  `closingReason` will update to include `confirmed: true`.\n\n  ### Accessibility\n\n  This element has `role=\"dialog\"` by default. Depending on the context, it may be\n  more appropriate to override this attribute with `role=\"alertdialog\"`.\n\n  If `modal` is set, the element will prevent the focus from exiting the element.\n  It will also ensure that focus remains in the dialog.\n\n  @hero hero.svg\n  @demo demo/index.html\n  @polymerBehavior Polymer.PaperDialogBehavior\n */\nexport const PaperDialogBehaviorImpl = {\n\n  hostAttributes: {'role': 'dialog', 'tabindex': '-1'},\n\n  properties: {\n\n    /**\n     * If `modal` is true, this implies `no-cancel-on-outside-click`,\n     * `no-cancel-on-esc-key` and `with-backdrop`.\n     */\n    modal: {type: Boolean, value: false},\n\n    __readied: {type: Boolean, value: false}\n\n  },\n\n  observers: ['_modalChanged(modal, __readied)'],\n\n  listeners: {'tap': '_onDialogClick'},\n\n  /**\n   * @return {void}\n   */\n  ready: function() {\n    // Only now these properties can be read.\n    this.__prevNoCancelOnOutsideClick = this.noCancelOnOutsideClick;\n    this.__prevNoCancelOnEscKey = this.noCancelOnEscKey;\n    this.__prevWithBackdrop = this.withBackdrop;\n    this.__readied = true;\n  },\n\n  _modalChanged: function(modal, readied) {\n    // modal implies noCancelOnOutsideClick, noCancelOnEscKey and withBackdrop.\n    // We need to wait for the element to be ready before we can read the\n    // properties values.\n    if (!readied) {\n      return;\n    }\n\n    if (modal) {\n      this.__prevNoCancelOnOutsideClick = this.noCancelOnOutsideClick;\n      this.__prevNoCancelOnEscKey = this.noCancelOnEscKey;\n      this.__prevWithBackdrop = this.withBackdrop;\n      this.noCancelOnOutsideClick = true;\n      this.noCancelOnEscKey = true;\n      this.withBackdrop = true;\n    } else {\n      // If the value was changed to false, let it false.\n      this.noCancelOnOutsideClick =\n          this.noCancelOnOutsideClick && this.__prevNoCancelOnOutsideClick;\n      this.noCancelOnEscKey =\n          this.noCancelOnEscKey && this.__prevNoCancelOnEscKey;\n      this.withBackdrop = this.withBackdrop && this.__prevWithBackdrop;\n    }\n  },\n\n  _updateClosingReasonConfirmed: function(confirmed) {\n    this.closingReason = this.closingReason || {};\n    this.closingReason.confirmed = confirmed;\n  },\n\n  /**\n   * Will dismiss the dialog if user clicked on an element with dialog-dismiss\n   * or dialog-confirm attribute.\n   */\n  _onDialogClick: function(event) {\n    // Search for the element with dialog-confirm or dialog-dismiss,\n    // from the root target until this (excluded).\n    var path = dom(event).path;\n    for (var i = 0, l = path.indexOf(this); i < l; i++) {\n      var target = path[i];\n      if (target.hasAttribute &&\n          (target.hasAttribute('dialog-dismiss') ||\n           target.hasAttribute('dialog-confirm'))) {\n        this._updateClosingReasonConfirmed(\n            target.hasAttribute('dialog-confirm'));\n        this.close();\n        event.stopPropagation();\n        break;\n      }\n    }\n  }\n\n};\n\n/** @polymerBehavior */\nexport const PaperDialogBehavior = [IronOverlayBehavior, PaperDialogBehaviorImpl];\n","import '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport '@polymer/paper-styles/default-theme.js';\nimport '@polymer/paper-styles/typography.js';\nimport '@polymer/paper-styles/shadow.js';\nconst $_documentContainer = document.createElement('template');\n$_documentContainer.setAttribute('style', 'display: none;');\n\n$_documentContainer.innerHTML = `<dom-module id=\"paper-dialog-shared-styles\">\n  <template>\n    <style>\n      :host {\n        display: block;\n        margin: 24px 40px;\n\n        background: var(--paper-dialog-background-color, var(--primary-background-color));\n        color: var(--paper-dialog-color, var(--primary-text-color));\n\n        @apply --paper-font-body1;\n        @apply --shadow-elevation-16dp;\n        @apply --paper-dialog;\n      }\n\n      :host > ::slotted(*) {\n        margin-top: 20px;\n        padding: 0 24px;\n      }\n\n      :host > ::slotted(.no-padding) {\n        padding: 0;\n      }\n\n      \n      :host > ::slotted(*:first-child) {\n        margin-top: 24px;\n      }\n\n      :host > ::slotted(*:last-child) {\n        margin-bottom: 24px;\n      }\n\n      /* In 1.x, this selector was \\`:host > ::content h2\\`. In 2.x <slot> allows\n      to select direct children only, which increases the weight of this\n      selector, so we have to re-define first-child/last-child margins below. */\n      :host > ::slotted(h2) {\n        position: relative;\n        margin: 0;\n\n        @apply --paper-font-title;\n        @apply --paper-dialog-title;\n      }\n\n      /* Apply mixin again, in case it sets margin-top. */\n      :host > ::slotted(h2:first-child) {\n        margin-top: 24px;\n        @apply --paper-dialog-title;\n      }\n\n      /* Apply mixin again, in case it sets margin-bottom. */\n      :host > ::slotted(h2:last-child) {\n        margin-bottom: 24px;\n        @apply --paper-dialog-title;\n      }\n\n      :host > ::slotted(.paper-dialog-buttons),\n      :host > ::slotted(.buttons) {\n        position: relative;\n        padding: 8px 8px 8px 24px;\n        margin: 0;\n\n        color: var(--paper-dialog-button-color, var(--primary-color));\n\n        @apply --layout-horizontal;\n        @apply --layout-end-justified;\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n\n/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n/*\n### Styling\n\nThe following custom properties and mixins are available for styling.\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-dialog-background-color` | Dialog background color                     | `--primary-background-color`\n`--paper-dialog-color`            | Dialog foreground color                     | `--primary-text-color`\n`--paper-dialog`                  | Mixin applied to the dialog                 | `{}`\n`--paper-dialog-title`            | Mixin applied to the title (`<h2>`) element | `{}`\n`--paper-dialog-button-color`     | Button area foreground color                | `--default-primary-color`\n*/\n/*\n  FIXME(polymer-modulizer): the above comments were extracted\n  from HTML and may be out of place here. Review them and\n  then delete this comment!\n*/\n;\n","import { dedupingMixin } from '@polymer/polymer/lib/utils/mixin.js';\nimport { PaperDialogBehavior } from '@polymer/paper-dialog-behavior/paper-dialog-behavior.js';\nimport { mixinBehaviors } from '@polymer/polymer/lib/legacy/class.js';\nimport EventsMixin from './events-mixin';\n/**\n * @polymerMixin\n * @appliesMixin EventsMixin\n * @appliesMixin PaperDialogBehavior\n */\nexport default dedupingMixin(superClass =>\n  class extends mixinBehaviors([EventsMixin, PaperDialogBehavior], superClass) {\n    static get properties() {\n      return {\n        withBackdrop: {\n          type: Boolean,\n          value: true,\n        },\n      };\n    }\n  });\n","import '@polymer/iron-icon/iron-icon.js';\nimport '@polymer/paper-dialog-behavior/paper-dialog-shared-styles.js';\nimport '@polymer/paper-icon-button/paper-icon-button.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport DialogMixin from '../mixins/dialog-mixin.js';\n\n/*\n * @appliesMixin DialogMixin\n */\nclass HaVoiceCommandDialog extends DialogMixin(PolymerElement) {\n  static get template() {\n    return html`\n    <style include=\"paper-dialog-shared-styles\">\n      iron-icon {\n        margin-right: 8px;\n      }\n\n      .content {\n        width: 450px;\n        min-height: 80px;\n        font-size: 18px;\n        padding: 16px;\n      }\n\n      .messages {\n        max-height: 50vh;\n        overflow: auto;\n      }\n\n      .messages::after {\n        content: \"\";\n        clear: both;\n        display: block;\n      }\n\n      .message {\n        clear: both;\n        margin: 8px 0;\n        padding: 8px;\n        border-radius: 15px;\n      }\n\n      .message.user {\n        margin-left: 24px;\n        float: right;\n        text-align: right;\n        border-bottom-right-radius: 0px;\n        background-color: var(--light-primary-color);\n        color: var(--primary-text-color);\n      }\n\n      .message.hass {\n        margin-right: 24px;\n        float: left;\n        border-bottom-left-radius: 0px;\n        background-color: var(--primary-color);\n        color: var(--text-primary-color);\n      }\n\n      .message.error {\n        background-color: var(--google-red-500);\n        color: var(--text-primary-color);\n      }\n\n      .icon {\n        text-align: center;\n      }\n\n      .icon paper-icon-button {\n        height: 52px;\n        width: 52px;\n      }\n\n      .interimTranscript {\n        color: darkgrey;\n      }\n\n      [hidden] {\n        display: none;\n      }\n\n      :host {\n        border-radius: 2px;\n      }\n\n      @media all and (max-width: 450px) {\n        :host {\n          margin: 0;\n          width: 100%;\n          max-height: calc(100% - 64px);\n\n          position: fixed !important;\n          bottom: 0px;\n          left: 0px;\n          right: 0px;\n          overflow: scroll;\n          border-bottom-left-radius: 0px;\n          border-bottom-right-radius: 0px;\n        }\n\n        .content {\n          width: auto;\n        }\n\n        .messages {\n          max-height: 68vh;\n        }\n      }\n    </style>\n\n    <div class=\"content\">\n      <div class=\"messages\" id=\"messages\">\n        <template is=\"dom-repeat\" items=\"[[_conversation]]\" as=\"message\">\n          <div class\\$=\"[[_computeMessageClasses(message)]]\">[[message.text]]</div>\n        </template>\n      </div>\n      <template is=\"dom-if\" if=\"[[results]]\">\n        <div class=\"messages\">\n          <div class=\"message user\">\n            <span>{{results.final}}</span>\n            <span class=\"interimTranscript\">[[results.interim]]</span>\n            …\n          </div>\n        </div>\n      </template>\n      <div class=\"icon\" hidden\\$=\"[[results]]\">\n        <paper-icon-button icon=\"hass:text-to-speech\" on-click=\"startListening\"></paper-icon-button>\n      </div>\n    </div>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      results: {\n        type: Object,\n        value: null,\n        observer: '_scrollMessagesBottom',\n      },\n\n      _conversation: {\n        type: Array,\n        value: function () {\n          return [{ who: 'hass', text: 'How can I help?' }];\n        },\n        observer: '_scrollMessagesBottom',\n      }\n    };\n  }\n\n  static get observers() { return ['dialogOpenChanged(opened)']; }\n\n  initRecognition() {\n    /* eslint-disable new-cap */\n    this.recognition = new webkitSpeechRecognition();\n    /* eslint-enable new-cap */\n\n    this.recognition.onstart = function () {\n      this.results = {\n        final: '',\n        interim: '',\n      };\n    }.bind(this);\n    this.recognition.onerror = function () {\n      this.recognition.abort();\n      var text = this.results.final || this.results.interim;\n      this.results = null;\n      if (text === '') {\n        text = '<Home Assistant did not hear anything>';\n      }\n      this.push('_conversation', { who: 'user', text: text, error: true });\n    }.bind(this);\n    this.recognition.onend = function () {\n      // Already handled by onerror\n      if (this.results == null) {\n        return;\n      }\n      var text = this.results.final || this.results.interim;\n      this.results = null;\n      this.push('_conversation', { who: 'user', text: text });\n\n      this.hass.callApi('post', 'conversation/process', { text: text })\n        .then(function (response) {\n          this.push('_conversation', { who: 'hass', text: response.speech.plain.speech });\n        }.bind(this), function () {\n          this.set(['_conversation', this._conversation.length - 1, 'error'], true);\n        }.bind(this));\n    }.bind(this);\n\n    this.recognition.onresult = function (event) {\n      var oldResults = this.results;\n      var finalTranscript = '';\n      var interimTranscript = '';\n\n      for (var ind = event.resultIndex; ind < event.results.length; ind++) {\n        if (event.results[ind].isFinal) {\n          finalTranscript += event.results[ind][0].transcript;\n        } else {\n          interimTranscript += event.results[ind][0].transcript;\n        }\n      }\n\n      this.results = {\n        interim: interimTranscript,\n        final: oldResults.final + finalTranscript,\n      };\n    }.bind(this);\n  }\n\n  startListening() {\n    if (!this.recognition) {\n      this.initRecognition();\n    }\n\n    this.results = {\n      interim: '',\n      final: '',\n    };\n    this.recognition.start();\n  }\n\n  _scrollMessagesBottom() {\n    setTimeout(() => {\n      this.$.messages.scrollTop = this.$.messages.scrollHeight;\n\n      if (this.$.messages.scrollTop !== 0) {\n        this.$.dialog.fire('iron-resize');\n      }\n    }, 10);\n  }\n\n  dialogOpenChanged(newVal) {\n    if (newVal) {\n      this.startListening();\n    } else if (!newVal && this.results) {\n      this.recognition.abort();\n    }\n  }\n\n  _computeMessageClasses(message) {\n    return 'message ' + message.who + (message.error ? ' error' : '');\n  }\n}\n\ncustomElements.define('ha-voice-command-dialog', HaVoiceCommandDialog);\n"],"sourceRoot":""}