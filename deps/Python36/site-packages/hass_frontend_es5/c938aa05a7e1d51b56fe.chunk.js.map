{"version":3,"sources":["webpack:///./src/components/entity/ha-entity-picker.js","webpack:///./src/components/ha-combo-box.js","webpack:///./src/components/ha-service-picker.js","webpack:///./node_modules/@polymer/app-storage/app-storage-behavior.js","webpack:///./src/util/app-localstorage-document.js","webpack:///./src/panels/dev-service/ha-panel-dev-service.js"],"names":["HaEntityPicker","Object","_mixins_events_mixin_js__WEBPACK_IMPORTED_MODULE_10__","_mixins_localize_mixin_js__WEBPACK_IMPORTED_MODULE_9__","_polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_5__","_createClass","key","value","label","localize","hass","domainFilter","entityFilter","entityIds","keys","states","filter","eid","substr","indexOf","entities","sort","map","state","_common_entity_compute_state_name_js__WEBPACK_IMPORTED_MODULE_8__","a","newVal","this","_hass","opened","ev","stopPropagation","fire","get","_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_4__","_templateObject","allowCustomEntity","type","Boolean","observer","_states","Array","computed","autofocus","String","notify","Function","disabled","customElements","define","ha_combo_box_HaComboBox","events_mixin","polymer_element","HaComboBox","_items","items","item","itemLabelPath","html_tag","allowCustomValue","itemValuePath","ha_service_picker_HaServicePicker","localize_mixin","ha_service_picker_createClass","HaServicePicker","oldHass","config","services","result","forEach","domain","i","length","push","_services","ha_service_picker_templateObject","__webpack_require__","SPLICES_RX","LENGTH_RX","NUMBER_RX","AppStorageBehavior","properties","data","zeroValue","sequentialTransactions","log","observers","created","__initialized","__syncingToMemory","__initializingStoredValue","__transactionQueueAdvances","Promise","resolve","ready","_initializeStoredValue","isNew","transactionsComplete","saveValue","args","reset","destroy","initializeStoredValue","_getStoredValue","then","_log","_setStoredValue","syncToMemory","set","bind","getStoredValue","storagePath","setStoredValue","memoryPathToStoragePath","path","storagePathToMemoryPath","operation","_group","call","_groupEnd","valueIsEmpty","isArray","prototype","isPrototypeOf","_enqueueTransaction","transaction","catch","error","_error","console","apply","arguments","group","groupEnd","initializingStoredValue","e","__dataChanged","change","__pathCanBeIgnored","__normalizeMemoryPath","indexSplices","__pathIsSplices","__parentPath","parts","split","parentPath","currentPath","normalizedPath","test","join","slice","__pathRefersToArray","__pathTailToIndex","tail","pop","window","parseInt","replace","205","module","__webpack_exports__","_polymer_app_storage_app_storage_behavior_js__WEBPACK_IMPORTED_MODULE_0__","_polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_1__","is","behaviors","sessionOnly","storage","attached","listen","top","detached","unlisten","__setStorageValue","reject","removeItem","__parseValueFromStorage","node","__computeStorage","sessionStorage","localStorage","__storageSourceChanged","__onStorage","event","storageArea","__onAppLocalStorageChanged","detail","JSON","parse","getItem","setItem","stringify","ERROR_SENTINEL","HaPanelDevService","_polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_6__","serviceData","service","serviceDomains","fields","field","assign","description","domainService","err","parsedJSON","attributes","some","attr","entity_id","alert","callService","_domain","_service","target","_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_5__","narrow","showMenu","validJSON","_attributes","_description"],"mappings":"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","file":"c938aa05a7e1d51b56fe.chunk.js","sourcesContent":["import '@polymer/paper-icon-button/paper-icon-button.js';\nimport '@polymer/paper-input/paper-input.js';\nimport '@polymer/paper-item/paper-icon-item.js';\nimport '@polymer/paper-item/paper-item-body.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport '@vaadin/vaadin-combo-box/vaadin-combo-box-light.js';\n\n\nimport './state-badge.js';\n\nimport computeStateName from '../../common/entity/compute_state_name.js';\nimport LocalizeMixin from '../../mixins/localize-mixin.js';\nimport EventsMixin from '../../mixins/events-mixin.js';\n\n/*\n * @appliesMixin LocalizeMixin\n */\nclass HaEntityPicker extends EventsMixin(LocalizeMixin(PolymerElement)) {\n  static get template() {\n    return html`\n    <style>\n      paper-input > paper-icon-button {\n        width: 24px;\n        height: 24px;\n        padding: 2px;\n        color: var(--secondary-text-color);\n      }\n      [hidden] {\n        display: none;\n      }\n    </style>\n    <vaadin-combo-box-light\n      items=\"[[_states]]\"\n      item-value-path=\"entity_id\"\n      item-label-path=\"entity_id\"\n      value=\"{{value}}\"\n      opened=\"{{opened}}\"\n      allow-custom-value=\"[[allowCustomEntity]]\"\n      on-change='_fireChanged'\n    >\n      <paper-input autofocus=\"[[autofocus]]\" label=\"[[_computeLabel(label, localize)]]\" class=\"input\" value=\"[[value]]\" disabled=\"[[disabled]]\">\n        <paper-icon-button slot=\"suffix\" class=\"clear-button\" icon=\"hass:close\" no-ripple=\"\" hidden\\$=\"[[!value]]\">Clear</paper-icon-button>\n        <paper-icon-button slot=\"suffix\" class=\"toggle-button\" icon=\"[[_computeToggleIcon(opened)]]\" hidden=\"[[!_states.length]]\">Toggle</paper-icon-button>\n      </paper-input>\n      <template>\n        <style>\n          paper-icon-item {\n            margin: -10px;\n          }\n        </style>\n        <paper-icon-item>\n          <state-badge state-obj=\"[[item]]\" slot=\"item-icon\"></state-badge>\n          <paper-item-body two-line=\"\">\n            <div>[[_computeStateName(item)]]</div>\n            <div secondary=\"\">[[item.entity_id]]</div>\n          </paper-item-body>\n        </paper-icon-item>\n      </template>\n    </vaadin-combo-box-light>\n`;\n  }\n\n  static get properties() {\n    return {\n      allowCustomEntity: {\n        type: Boolean,\n        value: false,\n      },\n      hass: {\n        type: Object,\n        observer: '_hassChanged',\n      },\n      _hass: Object,\n      _states: {\n        type: Array,\n        computed: '_computeStates(_hass, domainFilter, entityFilter)',\n      },\n      autofocus: Boolean,\n      label: {\n        type: String,\n      },\n      value: {\n        type: String,\n        notify: true,\n      },\n      opened: {\n        type: Boolean,\n        value: false,\n        observer: '_openedChanged',\n      },\n      domainFilter: {\n        type: String,\n        value: null,\n      },\n      entityFilter: {\n        type: Function,\n        value: null,\n      },\n      disabled: Boolean,\n    };\n  }\n\n  _computeLabel(label, localize) {\n    return label === undefined\n      ? localize('ui.components.entity.entity-picker.entity')\n      : label;\n  }\n\n  _computeStates(hass, domainFilter, entityFilter) {\n    if (!hass) return [];\n\n    let entityIds = Object.keys(hass.states);\n\n    if (domainFilter) {\n      entityIds = entityIds.filter(eid => eid.substr(0, eid.indexOf('.')) === domainFilter);\n    }\n\n    let entities = entityIds.sort().map(key => hass.states[key]);\n\n    if (entityFilter) {\n      entities = entities.filter(entityFilter);\n    }\n\n    return entities;\n  }\n\n  _computeStateName(state) {\n    return computeStateName(state);\n  }\n\n  _openedChanged(newVal) {\n    if (!newVal) {\n      this._hass = this.hass;\n    }\n  }\n\n  _hassChanged(newVal) {\n    if (!this.opened) {\n      this._hass = newVal;\n    }\n  }\n\n  _computeToggleIcon(opened) {\n    return opened ? 'hass:menu-up' : 'hass:menu-down';\n  }\n\n  _fireChanged(ev) {\n    ev.stopPropagation();\n    this.fire('change');\n  }\n}\n\ncustomElements.define('ha-entity-picker', HaEntityPicker);\n","import '@polymer/paper-icon-button/paper-icon-button.js';\nimport '@polymer/paper-input/paper-input.js';\nimport '@polymer/paper-item/paper-item.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport '@vaadin/vaadin-combo-box/vaadin-combo-box-light.js';\n\nimport EventsMixin from '../mixins/events-mixin.js';\n\nclass HaComboBox extends EventsMixin(PolymerElement) {\n  static get template() {\n    return html`\n    <style>\n      paper-input > paper-icon-button {\n        width: 24px;\n        height: 24px;\n        padding: 2px;\n        color: var(--secondary-text-color);\n      }\n      [hidden] {\n        display: none;\n      }\n    </style>\n    <vaadin-combo-box-light\n      items=\"[[_items]]\"\n      item-value-path=\"[[itemValuePath]]\"\n      item-label-path=\"[[itemLabelPath]]\"\n      value=\"{{value}}\"\n      opened=\"{{opened}}\"\n      allow-custom-value=\"[[allowCustomValue]]\"\n      on-change='_fireChanged'\n    >\n      <paper-input autofocus=\"[[autofocus]]\" label=\"[[label]]\" class=\"input\" value=\"[[value]]\">\n        <paper-icon-button slot=\"suffix\" class=\"clear-button\" icon=\"hass:close\" hidden\\$=\"[[!value]]\">Clear</paper-icon-button>\n        <paper-icon-button slot=\"suffix\" class=\"toggle-button\" icon=\"[[_computeToggleIcon(opened)]]\" hidden\\$=\"[[!items.length]]\">Toggle</paper-icon-button>\n      </paper-input>\n      <template>\n        <style>\n            paper-item {\n              margin: -5px -10px;\n            }\n        </style>\n        <paper-item>[[_computeItemLabel(item, itemLabelPath)]]</paper-item>\n      </template>\n    </vaadin-combo-box-light>\n`;\n  }\n\n  static get properties() {\n    return {\n      allowCustomValue: Boolean,\n      items: {\n        type: Object,\n        observer: '_itemsChanged',\n      },\n      _items: Object,\n      itemLabelPath: String,\n      itemValuePath: String,\n      autofocus: Boolean,\n      label: String,\n      opened: {\n        type: Boolean,\n        value: false,\n        observer: '_openedChanged',\n      },\n      value: {\n        type: String,\n        notify: true,\n      },\n    };\n  }\n\n  _openedChanged(newVal) {\n    if (!newVal) {\n      this._items = this.items;\n    }\n  }\n\n  _itemsChanged(newVal) {\n    if (!this.opened) {\n      this._items = newVal;\n    }\n  }\n\n  _computeToggleIcon(opened) {\n    return opened ? 'hass:menu-up' : 'hass:menu-down';\n  }\n\n  _computeItemLabel(item, itemLabelPath) {\n    return itemLabelPath ? item[itemLabelPath] : item;\n  }\n\n  _fireChanged(ev) {\n    ev.stopPropagation();\n    this.fire('change');\n  }\n}\n\ncustomElements.define('ha-combo-box', HaComboBox);\n","import { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\n\nimport './ha-combo-box.js';\n\nimport LocalizeMixin from '../mixins/localize-mixin.js';\n\n/*\n * @appliesMixin LocalizeMixin\n */\nclass HaServicePicker extends LocalizeMixin(PolymerElement) {\n  static get template() {\n    return html`\n    <ha-combo-box label=\"[[localize('ui.components.service-picker.service')]]\" items=\"[[_services]]\" value=\"{{value}}\" allow-custom-value=\"\"></ha-combo-box>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n        observer: '_hassChanged',\n      },\n      _services: Array,\n      value: {\n        type: String,\n        notify: true,\n      },\n    };\n  }\n\n  _hassChanged(hass, oldHass) {\n    if (!hass) {\n      this._services = [];\n      return;\n    } else if (oldHass && hass.config.services === oldHass.config.services) {\n      return;\n    }\n    const result = [];\n\n    Object.keys(hass.config.services).sort().forEach((domain) => {\n      const services = Object.keys(hass.config.services[domain]).sort();\n\n      for (let i = 0; i < services.length; i++) {\n        result.push(`${domain}.${services[i]}`);\n      }\n    });\n\n    this._services = result;\n  }\n}\n\ncustomElements.define('ha-service-picker', HaServicePicker);\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nvar SPLICES_RX = /\\.splices$/;\nvar LENGTH_RX = /\\.length$/;\nvar NUMBER_RX = /\\.?#?([0-9]+)$/;\n\n/**\n * AppStorageBehavior is an abstract behavior that makes it easy to\n * synchronize in-memory data and a persistent storage system, such as\n * the browser's IndexedDB, or a remote database like Firebase.\n *\n * For examples of how to use this behavior to write your own app storage\n * elements see `<app-localstorage-document>` here, or check out\n * [polymerfire](https://github.com/Firebase/polymerfire) and\n * [app-pouchdb](https://github.com/PolymerElements/app-pouchdb).\n *\n * @polymerBehavior\n */\nexport const AppStorageBehavior = {\n  properties: {\n    /**\n     * The data to synchronize.\n     */\n    data: {\n      type: Object,\n      notify: true,\n      value: function() {\n        return this.zeroValue;\n      }\n    },\n\n    /**\n     * If this is true transactions will happen one after the other,\n     * never in parallel.\n     *\n     * Specifically, no transaction will begin until every previously\n     * enqueued transaction by this element has completed.\n     *\n     * If it is false, new transactions will be executed as they are\n     * received.\n     */\n    sequentialTransactions: {type: Boolean, value: false},\n\n    /**\n     * When true, will perform detailed logging.\n     */\n    log: {type: Boolean, value: false}\n  },\n\n  observers: ['__dataChanged(data.*)'],\n\n  created: function() {\n    this.__initialized = false;\n    this.__syncingToMemory = false;\n    this.__initializingStoredValue = null;\n    this.__transactionQueueAdvances = Promise.resolve();\n  },\n\n  ready: function() {\n    this._initializeStoredValue();\n  },\n\n  /**\n   * Override this getter to return true if the value has never been\n   * persisted to storage.\n   *\n   * @return {boolean}\n   */\n  get isNew() {\n    return true;\n  },\n\n  /**\n   * A promise that will resolve once all queued transactions\n   * have completed.\n   *\n   * This field is updated as new transactions are enqueued, so it will\n   * only wait for transactions which were enqueued when the field\n   * was accessed.\n   *\n   * This promise never rejects.\n   *\n   * @return {Promise}\n   */\n  get transactionsComplete() {\n    return this.__transactionQueueAdvances;\n  },\n\n  /**\n   * Override this getter to define the default value to use when\n   * there's no data stored.\n   *\n   * @return {*}\n   */\n  get zeroValue() {\n    return undefined;\n  },\n\n  /**\n   * Override this method.\n   *\n   * If the data value represented by this storage instance is new, this\n   * method generates an attempt to write the value to storage.\n   *\n   *\n   * @param {*} args\n   * @return {Promise} a Promise that settles only once the write has.\n   */\n  saveValue: function(args) {\n    return Promise.resolve();\n  },\n\n  /**\n   * Optional. Override this method to clear out the mapping of this\n   * storage object and a logical location within storage.\n   *\n   * If this method is supported, after it's called, isNew() should be\n   * true.\n   */\n  reset: function() {},\n\n  /**\n   * Remove the data from storage.\n   *\n   * @return {Promise} A promise that settles once the destruction is\n   *   complete.\n   */\n  destroy: function() {\n    this.data = this.zeroValue;\n    return this.saveValue();\n  },\n\n  /**\n   * Perform the initial sync between storage and memory. This method\n   * is called automatically while the element is being initialized.\n   * Implementations may override it.\n   *\n   * If an implementation intends to call this method, it should instead\n   * call _initializeStoredValue, which provides reentrancy protection.\n   *\n   * @return {Promise} A promise that settles once this process is\n   *     complete.\n   */\n  initializeStoredValue: function() {\n    if (this.isNew) {\n      return Promise.resolve();\n    }\n\n    // If this is not a \"new\" model, then we should attempt\n    // to read an initial value from storage:\n    return this._getStoredValue('data').then(function(data) {\n      this._log('Got stored value!', data, this.data);\n      if (data == null) {\n        return this._setStoredValue('data', this.data || this.zeroValue);\n      } else {\n        this.syncToMemory(function() {\n          this.set('data', data);\n        });\n      }\n    }.bind(this));\n  },\n\n  /**\n   * Override this method to implement reading a value from storage.\n   *\n   *\n   * @param {string} storagePath The path (through storage) of the value to\n   *   create, relative to the root of storage associated with this instance.\n   * @return {Promise} A promise that resolves with the canonical value stored\n   *   at the provided path when the transaction has completed. _If there is no\n   *   such value at the provided path through storage, then the promise will\n   *   resolve to `undefined`._ The promise will be rejected if the transaction\n   *   fails for any reason.\n   */\n  getStoredValue: function(storagePath) {\n    return Promise.resolve();\n  },\n\n  /**\n   * Override this method to implement creating and updating\n   * stored values.\n   *\n   *\n   * @param {string} storagePath The path of the value to update, relative\n   *   to the root storage path configured for this instance.\n   * @param {*} value The updated in-memory value to apply to the stored value\n   *   at the provided path.\n   * @return {Promise} A promise that resolves with the canonical value stored\n   *   at the provided path when the transaction has completed. The promise\n   *   will be rejected if the transaction fails for any reason.\n   */\n  setStoredValue: function(storagePath, value) {\n    return Promise.resolve(value);\n  },\n\n  /**\n   * Maps a Polymer databinding path to the corresponding path in the\n   * storage system. Override to define a custom mapping.\n   *\n   * The inverse of storagePathToMemoryPath.\n   *\n   * @param {string} path An in-memory path through a storage object.\n   * @return {string} The provided path mapped to the equivalent location in\n   *   storage. This mapped version of the path is suitable for use with the\n   *   CRUD operations on both memory and storage.\n   */\n  memoryPathToStoragePath: function(path) {\n    return path;\n  },\n\n  /**\n   * Maps a storage path to the corresponding Polymer databinding path.\n   * Override to define a custom mapping.\n   *\n   * The inverse of memoryPathToStoragePath.\n   *\n   * @param {string} path The storage path through a storage object.\n   * @return {string} The provided path through storage mapped to the\n   *   equivalent Polymer path through the in-memory representation of storage.\n   */\n  storagePathToMemoryPath: function(path) {\n    return path;\n  },\n\n  /**\n   * Enables performing transformations on the in-memory representation of\n   * storage without activating observers that will cause those\n   * transformations to be re-applied to the storage backend. This is useful\n   * for preventing redundant (or cyclical) application of transformations.\n   *\n   * @param {Function} operation A function that will perform the desired\n   *   transformation. It will be called synchronously, when it is safe to\n   *   apply the transformation.\n   */\n  syncToMemory: function(operation) {\n    if (this.__syncingToMemory) {\n      return;\n    }\n\n    this._group('Sync to memory.');\n\n    this.__syncingToMemory = true;\n    operation.call(this);\n    this.__syncingToMemory = false;\n\n    this._groupEnd('Sync to memory.');\n  },\n\n  /**\n   * A convenience method. Returns true iff value is null, undefined,\n   * an empty array, or an object with no keys.\n   */\n  valueIsEmpty: function(value) {\n    if (Array.isArray(value)) {\n      return value.length === 0;\n    } else if (Object.prototype.isPrototypeOf(value)) {\n      return Object.keys(value).length === 0;\n    } else {\n      return value == null;\n    }\n  },\n\n  /**\n   * Like `getStoredValue` but called with a Polymer path rather than\n   * a storage path.\n   *\n   * @param {string} path The Polymer path to get.\n   * @return {Promise} A Promise of the value stored at that path.\n   */\n  _getStoredValue: function(path) {\n    return this.getStoredValue(this.memoryPathToStoragePath(path));\n  },\n\n  /**\n   * Like `setStoredValue` but called with a Polymer path rather than\n   * a storage path.\n   *\n   * @param {string} path The Polymer path to update.\n   * @param {*} value The updated in-memory value to apply to the stored value\n   *   at the provided path.\n   * @return {Promise} A promise that resolves with the canonical value stored\n   *   at the provided path when the transaction has completed. The promise\n   *   will be rejected if the transaction fails for any reason.\n   */\n  _setStoredValue: function(path, value) {\n    return this.setStoredValue(this.memoryPathToStoragePath(path), value);\n  },\n\n  /**\n   * Enqueues the given function in the transaction queue.\n   *\n   * The transaction queue allows for optional parallelism/sequentiality\n   * via the `sequentialTransactions` boolean property, as well as giving\n   * the user a convenient way to wait for all pending transactions to\n   * finish.\n   *\n   * The given function may be called immediately or after an arbitrary\n   * delay. Its `this` context will be bound to the element.\n   *\n   * If the transaction performs any asynchronous operations it must\n   * return a promise.\n   *\n   * @param {Function} transaction A function implementing the transaction.\n   * @return {Promise} A promise that resolves once the transaction has\n   *   finished. This promise will never reject.\n   */\n  _enqueueTransaction: function(transaction) {\n    if (this.sequentialTransactions) {\n      transaction = transaction.bind(this);\n    } else {\n      var result = transaction.call(this);\n      transaction = function() {\n        return result;\n      };\n    }\n\n    return this.__transactionQueueAdvances =\n               this.__transactionQueueAdvances.then(transaction)\n                   .catch(function(error) {\n                     this._error('Error performing queued transaction.', error);\n                   }.bind(this));\n  },\n\n  /**\n   * A wrapper around `console.log`.\n   */\n  _log: function() {\n    if (this.log) {\n      console.log.apply(console, arguments);\n    }\n  },\n\n  /**\n   * A wrapper around `console.error`.\n   */\n  _error: function() {\n    if (this.log) {\n      console.error.apply(console, arguments);\n    }\n  },\n\n  /**\n   * A wrapper around `console.group`.\n   */\n  _group: function() {\n    if (this.log) {\n      console.group.apply(console, arguments);\n    }\n  },\n\n  /**\n   * A wrapper around `console.groupEnd`.\n   */\n  _groupEnd: function() {\n    if (this.log) {\n      console.groupEnd.apply(console, arguments);\n    }\n  },\n\n  /**\n   * A reentrancy-save wrapper around `this.initializeStoredValue`.\n   * Prefer calling this method over that one.\n   *\n   * @return {Promise} The result of calling `initializeStoredValue`,\n   *   or `undefined` if called while initializing.\n   */\n  _initializeStoredValue: function() {\n    if (this.__initializingStoredValue) {\n      return;\n    }\n\n    this._group('Initializing stored value.');\n\n    var initializingStoredValue = this.__initializingStoredValue =\n        this.initializeStoredValue()\n            .then(function() {\n              this.__initialized = true;\n              this.__initializingStoredValue = null;\n              this._groupEnd('Initializing stored value.');\n            }.bind(this))\n            .catch(function(e) {\n              this.__initializingStoredValue = null;\n              this._groupEnd('Initializing stored value.');\n            }.bind(this));\n\n    return this._enqueueTransaction(function() {\n      return initializingStoredValue;\n    });\n  },\n\n  __dataChanged: function(change) {\n    if (this.isNew || this.__syncingToMemory || !this.__initialized ||\n        this.__pathCanBeIgnored(change.path)) {\n      return;\n    }\n\n    var path = this.__normalizeMemoryPath(change.path);\n    var value = change.value;\n    var indexSplices = value && value.indexSplices;\n\n    this._enqueueTransaction(function() {\n      this._log('Setting', path + ':', indexSplices || value);\n\n      if (indexSplices && this.__pathIsSplices(path)) {\n        path = this.__parentPath(path);\n        value = this.get(path);\n      }\n\n      return this._setStoredValue(path, value);\n    });\n  },\n\n  __normalizeMemoryPath: function(path) {\n    var parts = path.split('.');\n    var parentPath = [];\n    var currentPath = [];\n    var normalizedPath = [];\n    var index;\n\n    for (var i = 0; i < parts.length; ++i) {\n      currentPath.push(parts[i]);\n      if (/^#/.test(parts[i])) {\n        normalizedPath.push(\n            this.get(parentPath).indexOf(this.get(currentPath)));\n      } else {\n        normalizedPath.push(parts[i]);\n      }\n      parentPath.push(parts[i]);\n    }\n\n    return normalizedPath.join('.');\n  },\n\n  __parentPath: function(path) {\n    var parentPath = path.split('.');\n    return parentPath.slice(0, parentPath.length - 1).join('.');\n  },\n\n  __pathCanBeIgnored: function(path) {\n    return LENGTH_RX.test(path) &&\n        Array.isArray(this.get(this.__parentPath(path)));\n  },\n\n  __pathIsSplices: function(path) {\n    return SPLICES_RX.test(path) &&\n        Array.isArray(this.get(this.__parentPath(path)));\n  },\n\n  __pathRefersToArray: function(path) {\n    return (SPLICES_RX.test(path) || LENGTH_RX.test(path)) &&\n        Array.isArray(this.get(this.__parentPath(path)));\n  },\n\n  __pathTailToIndex: function(path) {\n    var tail = path.split('.').pop();\n    return window.parseInt(tail.replace(NUMBER_RX, '$1'), 10);\n  }\n};\n","/* Forked because it contained an import.meta which webpack doesn't support. */\n/* eslint-disable */\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport { AppStorageBehavior } from '@polymer/app-storage/app-storage-behavior.js';\nimport { Polymer } from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport '@polymer/polymer/polymer-legacy.js';\n\n/**\n * app-localstorage-document synchronizes storage between an in-memory\n * value and a location in the browser's localStorage system.\n *\n * localStorage is a simple and widely supported storage API that provides both\n * permanent and session-based storage options. Using app-localstorage-document\n * you can easily integrate localStorage into your app via normal Polymer\n * databinding.\n *\n * app-localstorage-document is the reference implementation of an element\n * that uses `AppStorageBehavior`. Reading its code is a good way to get\n * started writing your own storage element.\n *\n * Example use:\n *\n *     <paper-input value=\"{{search}}\"></paper-input>\n *     <app-localstorage-document key=\"search\" data=\"{{search}}\">\n *     </app-localstorage-document>\n *\n * app-localstorage-document automatically synchronizes changes to the\n * same key across multiple tabs.\n *\n * Only supports storing JSON-serializable values.\n */\nPolymer({\n  is: 'app-localstorage-document',\n  behaviors: [AppStorageBehavior],\n\n  properties: {\n    /**\n     * Defines the logical location to store the data.\n     *\n     * @type{String}\n     */\n    key: {type: String, notify: true},\n\n    /**\n     * If true, the data will automatically be cleared from storage when\n     * the page session ends (i.e. when the user has navigated away from\n     * the page).\n     */\n    sessionOnly: {type: Boolean, value: false},\n\n    /**\n     * Either `window.localStorage` or `window.sessionStorage`, depending on\n     * `this.sessionOnly`.\n     */\n    storage: {type: Object, computed: '__computeStorage(sessionOnly)'}\n  },\n\n  observers: ['__storageSourceChanged(storage, key)'],\n\n  attached: function() {\n    this.listen(window, 'storage', '__onStorage');\n    this.listen(\n        window.top, 'app-local-storage-changed', '__onAppLocalStorageChanged');\n  },\n\n  detached: function() {\n    this.unlisten(window, 'storage', '__onStorage');\n    this.unlisten(\n        window.top, 'app-local-storage-changed', '__onAppLocalStorageChanged');\n  },\n\n  get isNew() {\n    return !this.key;\n  },\n\n  /**\n   * Stores a value at the given key, and if successful, updates this.key.\n   *\n   * @param {*} key The new key to use.\n   * @return {Promise}\n   */\n  saveValue: function(key) {\n    try {\n      this.__setStorageValue(/*{@type if (key ty){String}}*/ key, this.data);\n    } catch (e) {\n      return Promise.reject(e);\n    }\n\n    this.key = /** @type {String} */ (key);\n\n    return Promise.resolve();\n  },\n\n  reset: function() {\n    this.key = null;\n    this.data = this.zeroValue;\n  },\n\n  destroy: function() {\n    try {\n      this.storage.removeItem(this.key);\n      this.reset();\n    } catch (e) {\n      return Promise.reject(e);\n    }\n\n    return Promise.resolve();\n  },\n\n  getStoredValue: function(path) {\n    var value;\n\n    if (this.key != null) {\n      try {\n        value = this.__parseValueFromStorage();\n\n        if (value != null) {\n          value = this.get(path, {data: value});\n        } else {\n          value = undefined;\n        }\n      } catch (e) {\n        return Promise.reject(e);\n      }\n    }\n\n    return Promise.resolve(value);\n  },\n\n  setStoredValue: function(path, value) {\n    if (this.key != null) {\n      try {\n        this.__setStorageValue(this.key, this.data);\n      } catch (e) {\n        return Promise.reject(e);\n      }\n\n      this.fire('app-local-storage-changed', this, {node: window.top});\n    }\n\n    return Promise.resolve(value);\n  },\n\n  __computeStorage: function(sessionOnly) {\n    return sessionOnly ? window.sessionStorage : window.localStorage;\n  },\n\n  __storageSourceChanged: function(storage, key) {\n    this._initializeStoredValue();\n  },\n\n  __onStorage: function(event) {\n    if (event.key !== this.key || event.storageArea !== this.storage) {\n      return;\n    }\n\n    this.syncToMemory(function() {\n      this.set('data', this.__parseValueFromStorage());\n    });\n  },\n\n  __onAppLocalStorageChanged: function(event) {\n    if (event.detail === this || event.detail.key !== this.key ||\n        event.detail.storage !== this.storage) {\n      return;\n    }\n    this.syncToMemory(function() {\n      this.set('data', event.detail.data);\n    });\n  },\n\n  __parseValueFromStorage: function() {\n    try {\n      return JSON.parse(this.storage.getItem(this.key));\n    } catch (e) {\n      console.error('Failed to parse value from storage for', this.key);\n    }\n  },\n\n  __setStorageValue: function(key, value) {\n    if (typeof value === 'undefined')\n      value = null;\n    this.storage.setItem(key, JSON.stringify(value));\n  }\n});","import '@polymer/app-layout/app-header-layout/app-header-layout.js';\nimport '@polymer/app-layout/app-header/app-header.js';\nimport '@polymer/app-layout/app-toolbar/app-toolbar.js';\nimport '@polymer/paper-button/paper-button.js';\nimport '@polymer/paper-input/paper-textarea.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport '../../components/entity/ha-entity-picker.js';\nimport '../../components/ha-menu-button.js';\nimport '../../components/ha-service-picker.js';\nimport '../../resources/ha-style.js';\nimport '../../util/app-localstorage-document.js';\n\nconst ERROR_SENTINEL = {};\nclass HaPanelDevService extends PolymerElement {\n  static get template() {\n    return html`\n  <style include='ha-style'>\n    :host {\n      -ms-user-select: initial;\n      -webkit-user-select: initial;\n      -moz-user-select: initial;\n    }\n\n    .content {\n      padding: 16px;\n    }\n\n    .ha-form {\n      margin-right: 16px;\n      max-width: 400px;\n    }\n\n    .description {\n      margin-top: 24px;\n      white-space: pre-wrap;\n    }\n\n    .header {\n      @apply --paper-font-title;\n    }\n\n    .attributes th {\n      text-align: left;\n    }\n\n    .attributes tr {\n      vertical-align: top;\n    }\n\n    .attributes tr:nth-child(odd) {\n      background-color: var(--table-row-background-color,#eee)\n    }\n\n    .attributes tr:nth-child(even) {\n      background-color: var(--table-row-alternative-background-color,#eee)\n    }\n\n    .attributes td:nth-child(3) {\n      white-space: pre-wrap;\n      word-break: break-word;\n    }\n\n    pre {\n      margin: 0;\n    }\n\n    h1 {\n      white-space: normal;\n    }\n\n    td {\n      padding: 4px;\n    }\n\n    .error {\n      color: var(--google-red-500);\n    }\n  </style>\n\n  <app-header-layout has-scrolling-region>\n    <app-header slot=\"header\" fixed>\n      <app-toolbar>\n        <ha-menu-button narrow='[[narrow]]' show-menu='[[showMenu]]'></ha-menu-button>\n        <div main-title>Services</div>\n      </app-toolbar>\n    </app-header>\n\n    <app-localstorage-document\n      key='panel-dev-service-state-domain-service'\n      data='{{domainService}}'>\n    </app-localstorage-document>\n    <app-localstorage-document\n      key='[[_computeServicedataKey(domainService)]]'\n      data='{{serviceData}}'>\n    </app-localstorage-document>\n\n    <div class='content'>\n      <p>\n        The service dev tool allows you to call any available service in Home Assistant.\n      </p>\n\n      <div class='ha-form'>\n        <ha-service-picker\n          hass='[[hass]]'\n          value='{{domainService}}'\n        ></ha-service-picker>\n        <template is='dom-if' if='[[_computeHasEntity(_attributes)]]'>\n          <ha-entity-picker\n            hass='[[hass]]'\n            value='[[_computeEntityValue(parsedJSON)]]'\n            on-change='_entityPicked'\n            disabled='[[!validJSON]]'\n            domain-filter='[[_computeEntityDomainFilter(_domain)]]'\n            allow-custom-entity\n          ></ha-entity-picker>\n        </template>\n        <paper-textarea\n          always-float-label\n          label='Service Data (JSON, optional)'\n          value='{{serviceData}}'\n        ></paper-textarea>\n        <paper-button\n          on-click='_callService'\n          raised\n          disabled='[[!validJSON]]'\n        >Call Service</paper-button>\n        <template is='dom-if' if='[[!validJSON]]'>\n            <span class='error'>Invalid JSON</span>\n        </template>\n      </div>\n\n      <template is='dom-if' if='[[!domainService]]'>\n        <h1>Select a service to see the description</h1>\n      </template>\n\n      <template is='dom-if' if='[[domainService]]'>\n        <template is='dom-if' if='[[!_description]]'>\n          <h1>No description is available</h1>\n        </template>\n        <template is='dom-if' if='[[_description]]'>\n          <h3>[[_description]]</h3>\n\n          <table class='attributes'>\n            <tr>\n              <th>Parameter</th>\n              <th>Description</th>\n              <th>Example</th>\n            </tr>\n            <template is='dom-if' if='[[!_attributes.length]]'>\n              <tr><td colspan='3'>This service takes no parameters.</td></tr>\n            </template>\n            <template is='dom-repeat' items='[[_attributes]]' as='attribute'>\n              <tr>\n                <td><pre>[[attribute.key]]</pre></td>\n                <td>[[attribute.description]]</td>\n                <td>[[attribute.example]]</td>\n              </tr>\n            </template>\n          </table>\n        </template>\n      </template>\n    </div>\n\n  </app-header-layout>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n      },\n\n      narrow: {\n        type: Boolean,\n        value: false,\n      },\n\n      showMenu: {\n        type: Boolean,\n        value: false,\n      },\n\n      domainService: {\n        type: String,\n        observer: '_domainServiceChanged',\n      },\n\n      _domain: {\n        type: String,\n        computed: '_computeDomain(domainService)',\n      },\n\n      _service: {\n        type: String,\n        computed: '_computeService(domainService)',\n      },\n\n      serviceData: {\n        type: String,\n        value: '',\n      },\n\n      parsedJSON: {\n        type: Object,\n        computed: '_computeParsedServiceData(serviceData)'\n      },\n\n      validJSON: {\n        type: Boolean,\n        computed: '_computeValidJSON(parsedJSON)',\n      },\n\n      _attributes: {\n        type: Array,\n        computed: '_computeAttributesArray(hass, _domain, _service)',\n      },\n\n      _description: {\n        type: String,\n        computed: '_computeDescription(hass, _domain, _service)',\n      },\n    };\n  }\n\n  _domainServiceChanged() {\n    this.serviceData = '';\n  }\n\n  _computeAttributesArray(hass, domain, service) {\n    const serviceDomains = hass.config.services;\n    if (!(domain in serviceDomains)) return [];\n    if (!(service in serviceDomains[domain])) return [];\n\n    const fields = serviceDomains[domain][service].fields;\n    return Object.keys(fields).map(function (field) {\n      return Object.assign({ key: field }, fields[field]);\n    });\n  }\n\n  _computeDescription(hass, domain, service) {\n    const serviceDomains = hass.config.services;\n    if (!(domain in serviceDomains)) return undefined;\n    if (!(service in serviceDomains[domain])) return undefined;\n    return serviceDomains[domain][service].description;\n  }\n\n  _computeServicedataKey(domainService) {\n    return `panel-dev-service-state-servicedata.${domainService}`;\n  }\n\n  _computeDomain(domainService) {\n    return domainService.split('.', 1)[0];\n  }\n\n  _computeService(domainService) {\n    return domainService.split('.', 2)[1] || null;\n  }\n\n  _computeParsedServiceData(serviceData) {\n    try {\n      return serviceData ? JSON.parse(serviceData) : {};\n    } catch (err) {\n      return ERROR_SENTINEL;\n    }\n  }\n\n  _computeValidJSON(parsedJSON) {\n    return parsedJSON !== ERROR_SENTINEL;\n  }\n\n  _computeHasEntity(attributes) {\n    return attributes.some(attr => attr.key === 'entity_id');\n  }\n\n  _computeEntityValue(parsedJSON) {\n    return parsedJSON === ERROR_SENTINEL ? '' : parsedJSON.entity_id;\n  }\n\n  _computeEntityDomainFilter(domain) {\n    return domain === 'homeassistant' ? null : domain;\n  }\n\n  _callService() {\n    if (this.parsedJSON === ERROR_SENTINEL) {\n      // eslint-disable-next-line\n      alert(`Error parsing JSON: ${this.serviceData}`);\n    }\n\n    this.hass.callService(this._domain, this._service, this.parsedJSON);\n  }\n\n  _entityPicked(ev) {\n    this.serviceData = JSON.stringify(Object.assign({}, this.parsedJSON, {\n      entity_id: ev.target.value\n    }), null, 2);\n  }\n}\n\ncustomElements.define('ha-panel-dev-service', HaPanelDevService);\n"],"sourceRoot":""}