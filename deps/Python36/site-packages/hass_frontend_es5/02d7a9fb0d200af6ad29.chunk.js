/*! For license information please see 02d7a9fb0d200af6ad29.chunk.js.LICENSE */
(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{142:function(e,n,t){"use strict";t(2),t(28);var o=t(75),a=t(4),i=t(43),r=t(36),p=document.createElement("template");p.setAttribute("style","display: none;"),p.innerHTML='<dom-module id="paper-checkbox">\n  <template strip-whitespace="">\n    <style>\n      :host {\n        display: inline-block;\n        white-space: nowrap;\n        cursor: pointer;\n        --calculated-paper-checkbox-size: var(--paper-checkbox-size, 18px);\n        /* -1px is a sentinel for the default and is replaced in `attached`. */\n        --calculated-paper-checkbox-ink-size: var(--paper-checkbox-ink-size, -1px);\n        @apply --paper-font-common-base;\n        line-height: 0;\n        -webkit-tap-highlight-color: transparent;\n      }\n\n      :host([hidden]) {\n        display: none !important;\n      }\n\n      :host(:focus) {\n        outline: none;\n      }\n\n      .hidden {\n        display: none;\n      }\n\n      #checkboxContainer {\n        display: inline-block;\n        position: relative;\n        width: var(--calculated-paper-checkbox-size);\n        height: var(--calculated-paper-checkbox-size);\n        min-width: var(--calculated-paper-checkbox-size);\n        margin: var(--paper-checkbox-margin, initial);\n        vertical-align: var(--paper-checkbox-vertical-align, middle);\n        background-color: var(--paper-checkbox-unchecked-background-color, transparent);\n      }\n\n      #ink {\n        position: absolute;\n\n        /* Center the ripple in the checkbox by negative offsetting it by\n         * (inkWidth - rippleWidth) / 2 */\n        top: calc(0px - (var(--calculated-paper-checkbox-ink-size) - var(--calculated-paper-checkbox-size)) / 2);\n        left: calc(0px - (var(--calculated-paper-checkbox-ink-size) - var(--calculated-paper-checkbox-size)) / 2);\n        width: var(--calculated-paper-checkbox-ink-size);\n        height: var(--calculated-paper-checkbox-ink-size);\n        color: var(--paper-checkbox-unchecked-ink-color, var(--primary-text-color));\n        opacity: 0.6;\n        pointer-events: none;\n      }\n\n      #ink:dir(rtl) {\n        right: calc(0px - (var(--calculated-paper-checkbox-ink-size) - var(--calculated-paper-checkbox-size)) / 2);\n        left: auto;\n      }\n\n      #ink[checked] {\n        color: var(--paper-checkbox-checked-ink-color, var(--primary-color));\n      }\n\n      #checkbox {\n        position: relative;\n        box-sizing: border-box;\n        height: 100%;\n        border: solid 2px;\n        border-color: var(--paper-checkbox-unchecked-color, var(--primary-text-color));\n        border-radius: 2px;\n        pointer-events: none;\n        -webkit-transition: background-color 140ms, border-color 140ms;\n        transition: background-color 140ms, border-color 140ms;\n      }\n\n      /* checkbox checked animations */\n      #checkbox.checked #checkmark {\n        -webkit-animation: checkmark-expand 140ms ease-out forwards;\n        animation: checkmark-expand 140ms ease-out forwards;\n      }\n\n      @-webkit-keyframes checkmark-expand {\n        0% {\n          -webkit-transform: scale(0, 0) rotate(45deg);\n        }\n        100% {\n          -webkit-transform: scale(1, 1) rotate(45deg);\n        }\n      }\n\n      @keyframes checkmark-expand {\n        0% {\n          transform: scale(0, 0) rotate(45deg);\n        }\n        100% {\n          transform: scale(1, 1) rotate(45deg);\n        }\n      }\n\n      #checkbox.checked {\n        background-color: var(--paper-checkbox-checked-color, var(--primary-color));\n        border-color: var(--paper-checkbox-checked-color, var(--primary-color));\n      }\n\n      #checkmark {\n        position: absolute;\n        width: 36%;\n        height: 70%;\n        border-style: solid;\n        border-top: none;\n        border-left: none;\n        border-right-width: calc(2/15 * var(--calculated-paper-checkbox-size));\n        border-bottom-width: calc(2/15 * var(--calculated-paper-checkbox-size));\n        border-color: var(--paper-checkbox-checkmark-color, white);\n        -webkit-transform-origin: 97% 86%;\n        transform-origin: 97% 86%;\n        box-sizing: content-box; /* protect against page-level box-sizing */\n      }\n\n      #checkmark:dir(rtl) {\n        -webkit-transform-origin: 50% 14%;\n        transform-origin: 50% 14%;\n      }\n\n      /* label */\n      #checkboxLabel {\n        position: relative;\n        display: inline-block;\n        vertical-align: middle;\n        padding-left: var(--paper-checkbox-label-spacing, 8px);\n        white-space: normal;\n        line-height: normal;\n        color: var(--paper-checkbox-label-color, var(--primary-text-color));\n        @apply --paper-checkbox-label;\n      }\n\n      :host([checked]) #checkboxLabel {\n        color: var(--paper-checkbox-label-checked-color, var(--paper-checkbox-label-color, var(--primary-text-color)));\n        @apply --paper-checkbox-label-checked;\n      }\n\n      #checkboxLabel:dir(rtl) {\n        padding-right: var(--paper-checkbox-label-spacing, 8px);\n        padding-left: 0;\n      }\n\n      #checkboxLabel[hidden] {\n        display: none;\n      }\n\n      /* disabled state */\n\n      :host([disabled]) #checkbox {\n        opacity: 0.5;\n        border-color: var(--paper-checkbox-unchecked-color, var(--primary-text-color));\n      }\n\n      :host([disabled][checked]) #checkbox {\n        background-color: var(--paper-checkbox-unchecked-color, var(--primary-text-color));\n        opacity: 0.5;\n      }\n\n      :host([disabled]) #checkboxLabel  {\n        opacity: 0.65;\n      }\n\n      /* invalid state */\n      #checkbox.invalid:not(.checked) {\n        border-color: var(--paper-checkbox-error-color, var(--error-color));\n      }\n    </style>\n\n    <div id="checkboxContainer">\n      <div id="checkbox" class$="[[_computeCheckboxClass(checked, invalid)]]">\n        <div id="checkmark" class$="[[_computeCheckmarkClass(checked)]]"></div>\n      </div>\n    </div>\n\n    <div id="checkboxLabel"><slot></slot></div>\n  </template>\n\n  \n</dom-module>',document.head.appendChild(p.content),Object(a.a)({is:"paper-checkbox",behaviors:[o.a],hostAttributes:{role:"checkbox","aria-checked":!1,tabindex:0},properties:{ariaActiveAttribute:{type:String,value:"aria-checked"}},attached:function(){Object(i.a)(this,function(){if("-1px"===this.getComputedStyleValue("--calculated-paper-checkbox-ink-size").trim()){var e=this.getComputedStyleValue("--calculated-paper-checkbox-size").trim(),n="px",t=e.match(/[A-Za-z]+$/);null!==t&&(n=t[0]);var o=parseFloat(e),a=8/3*o;"px"===n&&(a=Math.floor(a))%2!=o%2&&a++,this.updateStyles({"--paper-checkbox-ink-size":a+n})}})},_computeCheckboxClass:function(e,n){var t="";return e&&(t+="checked "),n&&(t+="invalid"),t},_computeCheckmarkClass:function(e){return e?"":"hidden"},_createRipple:function(){return this._rippleContainer=this.$.checkboxContainer,r.b._createRipple.call(this)}})},173:function(e,n,t){"use strict";t(2),t(19),t(28),t(42);var o,a,i=t(4),r=t(0),p=(o=["\n    <style>\n      :host {\n        overflow: hidden; /* needed for text-overflow: ellipsis to work on ff */\n        @apply --layout-vertical;\n        @apply --layout-center-justified;\n        @apply --layout-flex;\n      }\n\n      :host([two-line]) {\n        min-height: var(--paper-item-body-two-line-min-height, 72px);\n      }\n\n      :host([three-line]) {\n        min-height: var(--paper-item-body-three-line-min-height, 88px);\n      }\n\n      :host > ::slotted(*) {\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n      }\n\n      :host > ::slotted([secondary]) {\n        @apply --paper-font-body1;\n\n        color: var(--paper-item-body-secondary-color, var(--secondary-text-color));\n\n        @apply --paper-item-body-secondary;\n      }\n    </style>\n\n    <slot></slot>\n"],a=["\n    <style>\n      :host {\n        overflow: hidden; /* needed for text-overflow: ellipsis to work on ff */\n        @apply --layout-vertical;\n        @apply --layout-center-justified;\n        @apply --layout-flex;\n      }\n\n      :host([two-line]) {\n        min-height: var(--paper-item-body-two-line-min-height, 72px);\n      }\n\n      :host([three-line]) {\n        min-height: var(--paper-item-body-three-line-min-height, 88px);\n      }\n\n      :host > ::slotted(*) {\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n      }\n\n      :host > ::slotted([secondary]) {\n        @apply --paper-font-body1;\n\n        color: var(--paper-item-body-secondary-color, var(--secondary-text-color));\n\n        @apply --paper-item-body-secondary;\n      }\n    </style>\n\n    <slot></slot>\n"],Object.freeze(Object.defineProperties(o,{raw:{value:Object.freeze(a)}})));Object(i.a)({_template:Object(r.a)(p),is:"paper-item-body"})},187:function(e,n,t){"use strict";t(2),t(19),t(42);var o,a,i=t(78),r=(t(108),t(4)),p=t(0),c=(o=['\n    <style include="paper-item-shared-styles"></style>\n    <style>\n      :host {\n        @apply --layout-horizontal;\n        @apply --layout-center;\n        @apply --paper-font-subhead;\n\n        @apply --paper-item;\n        @apply --paper-icon-item;\n      }\n\n      .content-icon {\n        @apply --layout-horizontal;\n        @apply --layout-center;\n\n        width: var(--paper-item-icon-width, 56px);\n        @apply --paper-item-icon;\n      }\n    </style>\n\n    <div id="contentIcon" class="content-icon">\n      <slot name="item-icon"></slot>\n    </div>\n    <slot></slot>\n'],a=['\n    <style include="paper-item-shared-styles"></style>\n    <style>\n      :host {\n        @apply --layout-horizontal;\n        @apply --layout-center;\n        @apply --paper-font-subhead;\n\n        @apply --paper-item;\n        @apply --paper-icon-item;\n      }\n\n      .content-icon {\n        @apply --layout-horizontal;\n        @apply --layout-center;\n\n        width: var(--paper-item-icon-width, 56px);\n        @apply --paper-item-icon;\n      }\n    </style>\n\n    <div id="contentIcon" class="content-icon">\n      <slot name="item-icon"></slot>\n    </div>\n    <slot></slot>\n'],Object.freeze(Object.defineProperties(o,{raw:{value:Object.freeze(a)}})));Object(r.a)({_template:Object(p.a)(c),is:"paper-icon-item",behaviors:[i.a]})},292:function(e,n,t){"use strict";t.r(n),t(141),t(140),t(119),t(138),t(142),t(59),t(58),t(187),t(173),t(85),t(99),t(102);var o,a,i=t(0),r=t(3),p=(t(120),t(153),t(12)),c=function(){function e(e,n){for(var t=0;t<n.length;t++){var o=n[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(n,t,o){return t&&e(n.prototype,t),o&&e(n,o),n}}(),l=function e(n,t,o){null===n&&(n=Function.prototype);var a=Object.getOwnPropertyDescriptor(n,t);if(void 0===a){var i=Object.getPrototypeOf(n);return null===i?void 0:e(i,t,o)}if("value"in a)return a.value;var r=a.get;return void 0!==r?r.call(o):void 0},s=(o=["\n    <style include=\"ha-style\">\n      :host {\n        height: 100%;\n      }\n      app-toolbar paper-listbox {\n        width: 150px;\n      }\n      app-toolbar paper-item {\n        cursor: pointer;\n      }\n      .content {\n        padding-bottom: 32px;\n        max-width: 600px;\n        margin: 0 auto;\n      }\n      paper-card {\n        display: block;\n      }\n      paper-icon-item {\n        border-top: 1px solid var(--divider-color);\n      }\n      paper-icon-item:first-child {\n        border-top: 0;\n      }\n      paper-checkbox {\n        padding: 11px;\n      }\n      paper-input {\n        --paper-input-container-underline: {\n          display: none;\n        }\n        --paper-input-container-underline-focus: {\n          display: none;\n        }\n        position: relative;\n        top: 1px;\n      }\n      .tip {\n        padding: 24px;\n        text-align: center;\n        color: var(--secondary-text-color);\n      }\n    </style>\n\n    <app-header-layout has-scrolling-region>\n      <app-header slot=\"header\" fixed>\n        <app-toolbar>\n          <ha-menu-button narrow='[[narrow]]' show-menu='[[showMenu]]'></ha-menu-button>\n          <div main-title>[[localize('panel.shopping_list')]]</div>\n          <ha-start-voice-button hass='[[hass]]' can-listen='{{canListen}}'></ha-start-voice-button>\n          <paper-menu-button\n            horizontal-align=\"right\"\n            horizontal-offset=\"-5\"\n            vertical-offset=\"-5\"\n          >\n            <paper-icon-button\n              icon=\"hass:dots-vertical\"\n              slot=\"dropdown-trigger\"\n            ></paper-icon-button>\n            <paper-listbox slot=\"dropdown-content\">\n              <paper-item\n                on-click=\"_clearCompleted\"\n              >[[localize('ui.panel.shopping-list.clear_completed')]]</paper-item>\n            </paper-listbox>\n          </paper-menu-button>\n        </app-toolbar>\n      </app-header>\n\n      <div class='content'>\n        <paper-card>\n          <paper-icon-item on-focus='_focusRowInput'>\n            <paper-icon-button\n              slot=\"item-icon\"\n              icon=\"hass:plus\"\n              on-click='_addItem'\n            ></paper-icon-button>\n            <paper-item-body>\n              <paper-input\n                id='addBox'\n                placeholder=\"[[localize('ui.panel.shopping-list.add_item')]]\"\n                on-keydown='_addKeyPress'\n                no-label-float\n              ></paper-input>\n            </paper-item-body>\n          </paper-icon-item>\n\n          <template is='dom-repeat' items='[[items]]'>\n            <paper-icon-item>\n                <paper-checkbox\n                  slot=\"item-icon\"\n                  checked='{{item.complete}}'\n                  on-click='_itemCompleteTapped'\n                  tabindex='0'\n                ></paper-checkbox>\n              <paper-item-body>\n                <paper-input\n                  id='editBox'\n                  no-label-float\n                  value='[[item.name]]'\n                  on-change='_saveEdit'\n                ></paper-input>\n              </paper-item-body>\n            </paper-icon-item>\n          </template>\n        </paper-card>\n        <div class='tip' hidden$='[[!canListen]]'>\n          [[localize('ui.panel.shopping-list.microphone_tip')]]\n        </div>\n      </div>\n    </app-header-layout>\n    "],a=["\n    <style include=\"ha-style\">\n      :host {\n        height: 100%;\n      }\n      app-toolbar paper-listbox {\n        width: 150px;\n      }\n      app-toolbar paper-item {\n        cursor: pointer;\n      }\n      .content {\n        padding-bottom: 32px;\n        max-width: 600px;\n        margin: 0 auto;\n      }\n      paper-card {\n        display: block;\n      }\n      paper-icon-item {\n        border-top: 1px solid var(--divider-color);\n      }\n      paper-icon-item:first-child {\n        border-top: 0;\n      }\n      paper-checkbox {\n        padding: 11px;\n      }\n      paper-input {\n        --paper-input-container-underline: {\n          display: none;\n        }\n        --paper-input-container-underline-focus: {\n          display: none;\n        }\n        position: relative;\n        top: 1px;\n      }\n      .tip {\n        padding: 24px;\n        text-align: center;\n        color: var(--secondary-text-color);\n      }\n    </style>\n\n    <app-header-layout has-scrolling-region>\n      <app-header slot=\"header\" fixed>\n        <app-toolbar>\n          <ha-menu-button narrow='[[narrow]]' show-menu='[[showMenu]]'></ha-menu-button>\n          <div main-title>[[localize('panel.shopping_list')]]</div>\n          <ha-start-voice-button hass='[[hass]]' can-listen='{{canListen}}'></ha-start-voice-button>\n          <paper-menu-button\n            horizontal-align=\"right\"\n            horizontal-offset=\"-5\"\n            vertical-offset=\"-5\"\n          >\n            <paper-icon-button\n              icon=\"hass:dots-vertical\"\n              slot=\"dropdown-trigger\"\n            ></paper-icon-button>\n            <paper-listbox slot=\"dropdown-content\">\n              <paper-item\n                on-click=\"_clearCompleted\"\n              >[[localize('ui.panel.shopping-list.clear_completed')]]</paper-item>\n            </paper-listbox>\n          </paper-menu-button>\n        </app-toolbar>\n      </app-header>\n\n      <div class='content'>\n        <paper-card>\n          <paper-icon-item on-focus='_focusRowInput'>\n            <paper-icon-button\n              slot=\"item-icon\"\n              icon=\"hass:plus\"\n              on-click='_addItem'\n            ></paper-icon-button>\n            <paper-item-body>\n              <paper-input\n                id='addBox'\n                placeholder=\"[[localize('ui.panel.shopping-list.add_item')]]\"\n                on-keydown='_addKeyPress'\n                no-label-float\n              ></paper-input>\n            </paper-item-body>\n          </paper-icon-item>\n\n          <template is='dom-repeat' items='[[items]]'>\n            <paper-icon-item>\n                <paper-checkbox\n                  slot=\"item-icon\"\n                  checked='{{item.complete}}'\n                  on-click='_itemCompleteTapped'\n                  tabindex='0'\n                ></paper-checkbox>\n              <paper-item-body>\n                <paper-input\n                  id='editBox'\n                  no-label-float\n                  value='[[item.name]]'\n                  on-change='_saveEdit'\n                ></paper-input>\n              </paper-item-body>\n            </paper-icon-item>\n          </template>\n        </paper-card>\n        <div class='tip' hidden$='[[!canListen]]'>\n          [[localize('ui.panel.shopping-list.microphone_tip')]]\n        </div>\n      </div>\n    </app-header-layout>\n    "],Object.freeze(Object.defineProperties(o,{raw:{value:Object.freeze(a)}}))),d=function(e){function n(){return function(e,t){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this),function(e,n){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!n||"object"!=typeof n&&"function"!=typeof n?e:n}(this,(n.__proto__||Object.getPrototypeOf(n)).apply(this,arguments))}return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function, not "+typeof n);e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),n&&(Object.setPrototypeOf?Object.setPrototypeOf(e,n):e.__proto__=n)}(n,Object(p.a)(r.a)),c(n,[{key:"connectedCallback",value:function(){l(n.prototype.__proto__||Object.getPrototypeOf(n.prototype),"connectedCallback",this).call(this),this._fetchData=this._fetchData.bind(this),this.hass.connection.subscribeEvents(this._fetchData,"shopping_list_updated").then(function(e){this._unsubEvents=e}.bind(this)),this._fetchData()}},{key:"disconnectedCallback",value:function(){l(n.prototype.__proto__||Object.getPrototypeOf(n.prototype),"disconnectedCallback",this).call(this),this._unsubEvents&&this._unsubEvents()}},{key:"_fetchData",value:function(){this.hass.callApi("get","shopping_list").then(function(e){e.reverse(),this.items=e}.bind(this))}},{key:"_itemCompleteTapped",value:function(e){var n=this;e.stopPropagation(),this.hass.callApi("post","shopping_list/item/"+e.model.item.id,{complete:e.target.checked}).catch(function(){return n._fetchData()})}},{key:"_addItem",value:function(e){var n=this;this.hass.callApi("post","shopping_list/item",{name:this.$.addBox.value}).catch(function(){return n._fetchData()}),this.$.addBox.value="",e&&setTimeout(function(){return n.$.addBox.focus()},10)}},{key:"_addKeyPress",value:function(e){13===e.keyCode&&this._addItem()}},{key:"_saveEdit",value:function(e){var n=this,t=e.model,o=t.index,a=t.item,i=e.target.value;i!==a.name&&(this.set(["items",o,"name"],i),this.hass.callApi("post","shopping_list/item/"+a.id,{name:i}).catch(function(){return n._fetchData()}))}},{key:"_clearCompleted",value:function(){this.hass.callApi("POST","shopping_list/clear_completed")}}],[{key:"template",get:function(){return Object(i.a)(s)}},{key:"properties",get:function(){return{hass:Object,narrow:Boolean,showMenu:Boolean,canListen:Boolean,items:{type:Array,value:[]}}}}]),n}();customElements.define("ha-panel-shopping-list",d)}}]);
//# sourceMappingURL=02d7a9fb0d200af6ad29.chunk.js.map