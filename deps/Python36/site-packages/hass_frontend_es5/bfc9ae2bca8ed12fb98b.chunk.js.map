{"version":3,"sources":["webpack:///./src/util/app-localstorage-document.js","webpack:///./src/panels/dev-mqtt/ha-panel-dev-mqtt.js"],"names":["__webpack_require__","Object","_polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_1__","a","is","behaviors","_polymer_app_storage_app_storage_behavior_js__WEBPACK_IMPORTED_MODULE_0__","properties","key","type","String","notify","sessionOnly","Boolean","value","storage","computed","observers","attached","this","listen","window","top","detached","unlisten","isNew","saveValue","__setStorageValue","data","e","Promise","reject","resolve","reset","zeroValue","destroy","removeItem","getStoredValue","path","__parseValueFromStorage","get","setStoredValue","fire","node","__computeStorage","sessionStorage","localStorage","__storageSourceChanged","_initializeStoredValue","__onStorage","event","storageArea","syncToMemory","set","__onAppLocalStorageChanged","detail","JSON","parse","getItem","console","error","setItem","stringify","HaPanelDevMqtt","_polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_8__","_createClass","hass","callService","topic","payload_template","payload","_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_7__","_templateObject","narrow","showMenu","customElements","define"],"mappings":";+GAAAA,EAAA,GAuCAC,OAAAC,EAAAC,EAAAF,EACEG,GAAI,4BACJC,WAAYC,EAAAH,GAEZI,YAMEC,KAAMC,KAAMC,OAAQC,WAOpBC,aAAcH,KAAMI,QAASC,UAM7BC,SAAUN,KAAMR,OAAQe,SAAU,kCAGpCC,WAAY,wCAEZC,SAAU,WACRC,KAAKC,OAAOC,OAAQ,UAAW,eAC/BF,KAAKC,OACDC,OAAOC,IAAK,4BAA6B,+BAG/CC,SAAU,WACRJ,KAAKK,SAASH,OAAQ,UAAW,eACjCF,KAAKK,SACDH,OAAOC,IAAK,4BAA6B,+BAG/CG,YACE,OAAQN,KAAKX,KASfkB,UAAW,SAASlB,GAClB,IACEW,KAAKQ,kBAAkDnB,EAAKW,KAAKS,MACjE,MAAOC,GACP,OAAOC,QAAQC,OAAOF,GAKxB,OAFAV,KAAKX,IAA6BA,EAE3BsB,QAAQE,WAGjBC,MAAO,WACLd,KAAKX,IAAM,KACXW,KAAKS,KAAOT,KAAKe,WAGnBC,QAAS,WACP,IACEhB,KAAKJ,QAAQqB,WAAWjB,KAAKX,KAC7BW,KAAKc,QACL,MAAOJ,GACP,OAAOC,QAAQC,OAAOF,GAGxB,OAAOC,QAAQE,WAGjBK,eAAgB,SAASC,GACvB,IAAIxB,EAEJ,GAAgB,MAAZK,KAAKX,IACP,IAIIM,EADW,OAFbA,EAAQK,KAAKoB,2BAGHpB,KAAKqB,IAAIF,GAAOV,KAAMd,WAIhC,MAAOe,GACP,OAAOC,QAAQC,OAAOF,GAI1B,OAAOC,QAAQE,QAAQlB,IAGzB2B,eAAgB,SAASH,EAAMxB,GAC7B,GAAgB,MAAZK,KAAKX,IAAa,CACpB,IACEW,KAAKQ,kBAAkBR,KAAKX,IAAKW,KAAKS,MACtC,MAAOC,GACP,OAAOC,QAAQC,OAAOF,GAGxBV,KAAKuB,KAAK,4BAA6BvB,MAAOwB,KAAMtB,OAAOC,MAG7D,OAAOQ,QAAQE,QAAQlB,IAGzB8B,iBAAkB,SAAShC,GACzB,OAAOA,EAAcS,OAAOwB,eAAiBxB,OAAOyB,cAGtDC,uBAAwB,SAAShC,EAASP,GACxCW,KAAK6B,0BAGPC,YAAa,SAASC,GAChBA,EAAM1C,MAAQW,KAAKX,KAAO0C,EAAMC,cAAgBhC,KAAKJ,SAIzDI,KAAKiC,aAAa,WAChBjC,KAAKkC,IAAI,OAAQlC,KAAKoB,8BAI1Be,2BAA4B,SAASJ,GAC/BA,EAAMK,SAAWpC,MAAQ+B,EAAMK,OAAO/C,MAAQW,KAAKX,KACnD0C,EAAMK,OAAOxC,UAAYI,KAAKJ,SAGlCI,KAAKiC,aAAa,WAChBjC,KAAKkC,IAAI,OAAQH,EAAMK,OAAO3B,SAIlCW,wBAAyB,WACvB,IACE,OAAOiB,KAAKC,MAAMtC,KAAKJ,QAAQ2C,QAAQvC,KAAKX,MAC5C,MAAOqB,GACP8B,QAAQC,MAAM,yCAA0CzC,KAAKX,OAIjEmB,kBAAmB,SAASnB,EAAKM,YACpBA,IACTA,EAAQ,MACVK,KAAKJ,QAAQ8C,QAAQrD,EAAKgD,KAAKM,UAAUhD,knHChLvCiD,8qBAAuBC,EAAA,GAAAC,EAAAF,IAAAvD,IAAA,WAAAM,MAAA,WA6EzBK,KAAK+C,KAAKC,YAAY,OAAQ,WAC5BC,MAAOjD,KAAKiD,MACZC,iBAAkBlD,KAAKmD,6CA7EzB,OAAOrE,OAAAsE,EAAApE,EAAAF,CAAPuE,sCAiEA,OACEN,KAAMjE,OACNwE,OAAQ5D,QACR6D,SAAU7D,QACVuD,MAAO1D,OACP4D,QAAS5D,cAxETqD,GAoFNY,eAAeC,OAAO,oBAAqBb","file":"bfc9ae2bca8ed12fb98b.chunk.js","sourcesContent":["/* Forked because it contained an import.meta which webpack doesn't support. */\n/* eslint-disable */\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport { AppStorageBehavior } from '@polymer/app-storage/app-storage-behavior.js';\nimport { Polymer } from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport '@polymer/polymer/polymer-legacy.js';\n\n/**\n * app-localstorage-document synchronizes storage between an in-memory\n * value and a location in the browser's localStorage system.\n *\n * localStorage is a simple and widely supported storage API that provides both\n * permanent and session-based storage options. Using app-localstorage-document\n * you can easily integrate localStorage into your app via normal Polymer\n * databinding.\n *\n * app-localstorage-document is the reference implementation of an element\n * that uses `AppStorageBehavior`. Reading its code is a good way to get\n * started writing your own storage element.\n *\n * Example use:\n *\n *     <paper-input value=\"{{search}}\"></paper-input>\n *     <app-localstorage-document key=\"search\" data=\"{{search}}\">\n *     </app-localstorage-document>\n *\n * app-localstorage-document automatically synchronizes changes to the\n * same key across multiple tabs.\n *\n * Only supports storing JSON-serializable values.\n */\nPolymer({\n  is: 'app-localstorage-document',\n  behaviors: [AppStorageBehavior],\n\n  properties: {\n    /**\n     * Defines the logical location to store the data.\n     *\n     * @type{String}\n     */\n    key: {type: String, notify: true},\n\n    /**\n     * If true, the data will automatically be cleared from storage when\n     * the page session ends (i.e. when the user has navigated away from\n     * the page).\n     */\n    sessionOnly: {type: Boolean, value: false},\n\n    /**\n     * Either `window.localStorage` or `window.sessionStorage`, depending on\n     * `this.sessionOnly`.\n     */\n    storage: {type: Object, computed: '__computeStorage(sessionOnly)'}\n  },\n\n  observers: ['__storageSourceChanged(storage, key)'],\n\n  attached: function() {\n    this.listen(window, 'storage', '__onStorage');\n    this.listen(\n        window.top, 'app-local-storage-changed', '__onAppLocalStorageChanged');\n  },\n\n  detached: function() {\n    this.unlisten(window, 'storage', '__onStorage');\n    this.unlisten(\n        window.top, 'app-local-storage-changed', '__onAppLocalStorageChanged');\n  },\n\n  get isNew() {\n    return !this.key;\n  },\n\n  /**\n   * Stores a value at the given key, and if successful, updates this.key.\n   *\n   * @param {*} key The new key to use.\n   * @return {Promise}\n   */\n  saveValue: function(key) {\n    try {\n      this.__setStorageValue(/*{@type if (key ty){String}}*/ key, this.data);\n    } catch (e) {\n      return Promise.reject(e);\n    }\n\n    this.key = /** @type {String} */ (key);\n\n    return Promise.resolve();\n  },\n\n  reset: function() {\n    this.key = null;\n    this.data = this.zeroValue;\n  },\n\n  destroy: function() {\n    try {\n      this.storage.removeItem(this.key);\n      this.reset();\n    } catch (e) {\n      return Promise.reject(e);\n    }\n\n    return Promise.resolve();\n  },\n\n  getStoredValue: function(path) {\n    var value;\n\n    if (this.key != null) {\n      try {\n        value = this.__parseValueFromStorage();\n\n        if (value != null) {\n          value = this.get(path, {data: value});\n        } else {\n          value = undefined;\n        }\n      } catch (e) {\n        return Promise.reject(e);\n      }\n    }\n\n    return Promise.resolve(value);\n  },\n\n  setStoredValue: function(path, value) {\n    if (this.key != null) {\n      try {\n        this.__setStorageValue(this.key, this.data);\n      } catch (e) {\n        return Promise.reject(e);\n      }\n\n      this.fire('app-local-storage-changed', this, {node: window.top});\n    }\n\n    return Promise.resolve(value);\n  },\n\n  __computeStorage: function(sessionOnly) {\n    return sessionOnly ? window.sessionStorage : window.localStorage;\n  },\n\n  __storageSourceChanged: function(storage, key) {\n    this._initializeStoredValue();\n  },\n\n  __onStorage: function(event) {\n    if (event.key !== this.key || event.storageArea !== this.storage) {\n      return;\n    }\n\n    this.syncToMemory(function() {\n      this.set('data', this.__parseValueFromStorage());\n    });\n  },\n\n  __onAppLocalStorageChanged: function(event) {\n    if (event.detail === this || event.detail.key !== this.key ||\n        event.detail.storage !== this.storage) {\n      return;\n    }\n    this.syncToMemory(function() {\n      this.set('data', event.detail.data);\n    });\n  },\n\n  __parseValueFromStorage: function() {\n    try {\n      return JSON.parse(this.storage.getItem(this.key));\n    } catch (e) {\n      console.error('Failed to parse value from storage for', this.key);\n    }\n  },\n\n  __setStorageValue: function(key, value) {\n    if (typeof value === 'undefined')\n      value = null;\n    this.storage.setItem(key, JSON.stringify(value));\n  }\n});","import '@polymer/app-layout/app-header-layout/app-header-layout.js';\nimport '@polymer/app-layout/app-header/app-header.js';\nimport '@polymer/app-layout/app-toolbar/app-toolbar.js';\nimport '@polymer/paper-button/paper-button.js';\nimport '@polymer/paper-card/paper-card.js';\nimport '@polymer/paper-input/paper-input.js';\nimport '@polymer/paper-input/paper-textarea.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport '../../components/ha-menu-button.js';\nimport '../../resources/ha-style.js';\nimport '../../util/app-localstorage-document.js';\n\nclass HaPanelDevMqtt extends PolymerElement {\n  static get template() {\n    return html`\n    <style include='ha-style'>\n      :host {\n        -ms-user-select: initial;\n        -webkit-user-select: initial;\n        -moz-user-select: initial;\n      }\n\n      .content {\n        padding: 24px 0 32px;\n        max-width: 600px;\n        margin: 0 auto;\n      }\n\n      paper-card {\n        display: block;\n      }\n\n      paper-button {\n        background-color: white;\n      }\n    </style>\n\n    <app-header-layout has-scrolling-region>\n      <app-header slot=\"header\" fixed>\n        <app-toolbar>\n          <ha-menu-button narrow='[[narrow]]' show-menu='[[showMenu]]'></ha-menu-button>\n          <div main-title>MQTT</div>\n        </app-toolbar>\n      </app-header>\n\n      <app-localstorage-document\n        key='panel-dev-mqtt-topic'\n        data='{{topic}}'>\n      </app-localstorage-document>\n      <app-localstorage-document\n        key='panel-dev-mqtt-payload'\n        data='{{payload}}'>\n      </app-localstorage-document>\n\n      <div class='content'>\n        <paper-card heading=\"Publish a packet\">\n          <div class='card-content'>\n            <paper-input\n              label=\"topic\"\n              value=\"{{topic}}\"\n            ></paper-input>\n\n            <paper-textarea\n              always-float-label\n              label='Payload (template allowed)'\n              value='{{payload}}'\n            ></paper-textarea>\n          </div>\n          <div class='card-actions'>\n            <paper-button on-click='_publish'>Publish</paper-button>\n          </div>\n        </paper-card>\n      </div>\n\n    </app-header-layout>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      narrow: Boolean,\n      showMenu: Boolean,\n      topic: String,\n      payload: String,\n    };\n  }\n\n  _publish() {\n    this.hass.callService('mqtt', 'publish', {\n      topic: this.topic,\n      payload_template: this.payload,\n    });\n  }\n}\n\ncustomElements.define('ha-panel-dev-mqtt', HaPanelDevMqtt);\n"],"sourceRoot":""}