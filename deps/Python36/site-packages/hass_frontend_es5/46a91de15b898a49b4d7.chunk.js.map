{"version":3,"sources":["webpack:///./src/resources/ha-chart-scripts.js"],"names":["chart_js__WEBPACK_IMPORTED_MODULE_0___default","a","Interaction","modes","neareach","chart","e","options","position","getRange","x","b","Math","abs","y","xy","pow","native","helpers","getRelativePosition","elements","elementsRange","datasets","data","meta","axis","rangeFunc","rangeMaxFunc","r","i","ilen","length","isDatasetVisible","j","jlen","getDatasetMeta","element","_view","skip","vm","range","oldRange","radius","hitRadius","filter","n","__webpack_exports__","default"],"mappings":"+HAKAA,EAAAC,EAAMC,YAAYC,MAAMC,SAAW,SAAUC,EAAOC,EAAGC,GACrD,IAWIC,EAXEC,GACJC,EAAG,SAACT,EAAGU,GAAJ,OAAUC,KAAKC,IAAIZ,EAAES,EAAIC,EAAED,IAC9BI,EAAG,SAACb,EAAGU,GAAJ,OAAUC,KAAKC,IAAIZ,EAAEa,EAAIH,EAAEG,IAE9BC,GAAI,SAACd,EAAGU,GAAJ,OAAUC,KAAKI,IAAIf,EAAES,EAAIC,EAAED,EAAG,GAAKE,KAAKI,IAAIf,EAAEa,EAAIH,EAAEG,EAAG,KAS3DN,EADEF,EAAEW,QAEFP,EAAGJ,EAAEI,EACLI,EAAGR,EAAEQ,GAGId,EAAAC,EAAMiB,QAAQC,oBAAoBb,EAAGD,GAElD,IAAMe,KACAC,KACAC,EAAWjB,EAAMkB,KAAKD,SACxBE,SACJjB,EAAQkB,KAAOlB,EAAQkB,MAAQ,KAI/B,IAHA,IAAMC,EAAYjB,EAASF,EAAQkB,MAC7BE,GAnBJjB,EAAG,SAAAkB,GAAA,OAAKA,GACRd,EAAG,SAAAc,GAAA,OAAKA,GACRb,GAAI,SAAAa,GAAA,OAAKA,EAAIA,IAiBkBrB,EAAQkB,MAEhCI,EAAI,EAAGC,EAAOR,EAASS,OAAQF,EAAIC,IAAQD,EAClD,GAAKxB,EAAM2B,iBAAiBH,GAK5B,IAAK,IAAII,EAAI,EAAGC,GADhBV,EAAOnB,EAAM8B,eAAeN,IACAN,KAAKQ,OAAQE,EAAIC,IAAQD,EAAG,CACtD,IAAMG,EAAUZ,EAAKD,KAAKU,GAC1B,IAAKG,EAAQC,MAAMC,KAAM,CACvB,IAAMC,EAAKH,EAAQC,MACbG,EAAQd,EAAUa,EAAI/B,GACtBiC,EAAWpB,EAAcQ,GAC3BW,EAAQb,EAAaY,EAAGG,OAASH,EAAGI,sBAClCF,GAA0BA,EAAWD,KACvCnB,EAAcQ,GAAKW,EACnBpB,EAASS,GAAKO,IAOxB,OADYhB,EAASwB,OAAO,SAAAC,GAAA,gBAAKA,KAInCC,EAAAC,QAAe/C,EAAfC","file":"46a91de15b898a49b4d7.chunk.js","sourcesContent":["import Chart from 'chart.js';\nimport 'chartjs-chart-timeline';\n\n// This function add a new interaction mode to Chart.js that\n// returns one point for every dataset.\nChart.Interaction.modes.neareach = function (chart, e, options) {\n  const getRange = {\n    x: (a, b) => Math.abs(a.x - b.x),\n    y: (a, b) => Math.abs(a.y - b.y),\n    // eslint-disable-next-line no-restricted-properties\n    xy: (a, b) => Math.pow(a.x - b.x, 2) + Math.pow(a.y - b.y, 2),\n  };\n  const getRangeMax = {\n    x: r => r,\n    y: r => r,\n    xy: r => r * r,\n  };\n  let position;\n  if (e.native) {\n    position = {\n      x: e.x,\n      y: e.y\n    };\n  } else {\n    position = Chart.helpers.getRelativePosition(e, chart);\n  }\n  const elements = [];\n  const elementsRange = [];\n  const datasets = chart.data.datasets;\n  let meta;\n  options.axis = options.axis || 'xy';\n  const rangeFunc = getRange[options.axis];\n  const rangeMaxFunc = getRangeMax[options.axis];\n\n  for (let i = 0, ilen = datasets.length; i < ilen; ++i) {\n    if (!chart.isDatasetVisible(i)) {\n      continue;\n    }\n\n    meta = chart.getDatasetMeta(i);\n    for (let j = 0, jlen = meta.data.length; j < jlen; ++j) {\n      const element = meta.data[j];\n      if (!element._view.skip) {\n        const vm = element._view;\n        const range = rangeFunc(vm, position);\n        const oldRange = elementsRange[i];\n        if (range < rangeMaxFunc(vm.radius + vm.hitRadius)) {\n          if (oldRange === undefined || oldRange > range) {\n            elementsRange[i] = range;\n            elements[i] = element;\n          }\n        }\n      }\n    }\n  }\n  const ret = elements.filter(n => n !== undefined);\n  return ret;\n};\n\nexport default Chart;\n"],"sourceRoot":""}