{"version":3,"sources":["webpack:///./node_modules/@polymer/paper-checkbox/paper-checkbox.js","webpack:///./node_modules/@polymer/paper-item/paper-item-body.js","webpack:///./node_modules/@polymer/paper-item/paper-icon-item.js","webpack:///./src/panels/shopping-list/ha-panel-shopping-list.js"],"names":["_polymer_paper_behaviors_paper_inky_focus_behavior_js__WEBPACK_IMPORTED_MODULE_5__","__webpack_require__","$_documentContainer","document","createElement","setAttribute","innerHTML","head","appendChild","content","Object","_polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_3__","a","is","behaviors","_polymer_paper_behaviors_paper_checked_element_behavior_js__WEBPACK_IMPORTED_MODULE_2__","hostAttributes","role","aria-checked","tabindex","properties","ariaActiveAttribute","type","String","value","attached","_polymer_polymer_lib_utils_render_status_js__WEBPACK_IMPORTED_MODULE_4__","this","getComputedStyleValue","trim","checkboxSizeText","units","unitsMatches","match","checkboxSize","parseFloat","defaultInkSize","Math","floor","updateStyles","--paper-checkbox-ink-size","_computeCheckboxClass","checked","invalid","className","_computeCheckmarkClass","_createRipple","_rippleContainer","$","checkboxContainer","b","call","_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_5__","_polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_4__","_template","184","module","__webpack_exports__","_paper_item_behavior_js__WEBPACK_IMPORTED_MODULE_3__","_polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_5__","_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_6__","288","r","_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_12__","_polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_13__","_mixins_localize_mixin_js__WEBPACK_IMPORTED_MODULE_16__","customElements","define","template","hass","narrow","Boolean","showMenu","canListen","items","Array","connectedCallback","super","_fetchData","bind","connection","subscribeEvents","then","unsub","_unsubEvents","disconnectedCallback","callApi","reverse","_itemCompleteTapped","ev","stopPropagation","model","item","id","complete","target","catch","_addItem","name","addBox","setTimeout","focus","_addKeyPress","keyCode","_saveEdit","index","set","_clearCompleted"],"mappings":"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","file":"65dd52f530e1cdf01b90.chunk.js","sourcesContent":["/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n/**\nMaterial design: [Checkbox](https://www.google.com/design/spec/components/selection-controls.html#selection-controls-checkbox)\n\n`paper-checkbox` is a button that can be either checked or unchecked.  User\ncan tap the checkbox to check or uncheck it.  Usually you use checkboxes\nto allow user to select multiple options from a set.  If you have a single\nON/OFF option, avoid using a single checkbox and use `paper-toggle-button`\ninstead.\n\nExample:\n\n    <paper-checkbox>label</paper-checkbox>\n\n    <paper-checkbox checked> label</paper-checkbox>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-checkbox-unchecked-background-color` | Checkbox background color when the input is not checked | `transparent`\n`--paper-checkbox-unchecked-color` | Checkbox border color when the input is not checked | `--primary-text-color`\n`--paper-checkbox-unchecked-ink-color` | Selected/focus ripple color when the input is not checked | `--primary-text-color`\n`--paper-checkbox-checked-color` | Checkbox color when the input is checked | `--primary-color`\n`--paper-checkbox-checked-ink-color` | Selected/focus ripple color when the input is checked | `--primary-color`\n`--paper-checkbox-checkmark-color` | Checkmark color | `white`\n`--paper-checkbox-label-color` | Label color | `--primary-text-color`\n`--paper-checkbox-label-checked-color` | Label color when the input is checked | `--paper-checkbox-label-color`\n`--paper-checkbox-label-spacing` | Spacing between the label and the checkbox | `8px`\n`--paper-checkbox-label` | Mixin applied to the label | `{}`\n`--paper-checkbox-label-checked` | Mixin applied to the label when the input is checked | `{}`\n`--paper-checkbox-error-color` | Checkbox color when invalid | `--error-color`\n`--paper-checkbox-size` | Size of the checkbox | `18px`\n`--paper-checkbox-ink-size` | Size of the ripple | `48px`\n`--paper-checkbox-margin` | Margin around the checkbox container | `initial`\n`--paper-checkbox-vertical-align` | Vertical alignment of the checkbox container | `middle`\n\nThis element applies the mixin `--paper-font-common-base` but does not import `paper-styles/typography.html`.\nIn order to apply the `Roboto` font to this element, make sure you've imported `paper-styles/typography.html`.\n\n@demo demo/index.html\n*/\n/*\n  FIXME(polymer-modulizer): the above comments were extracted\n  from HTML and may be out of place here. Review them and\n  then delete this comment!\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport '@polymer/paper-styles/default-theme.js';\nimport { PaperCheckedElementBehavior } from '@polymer/paper-behaviors/paper-checked-element-behavior.js';\nimport { Polymer } from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport { afterNextRender } from '@polymer/polymer/lib/utils/render-status.js';\nimport { PaperInkyFocusBehaviorImpl } from '@polymer/paper-behaviors/paper-inky-focus-behavior.js';\nconst $_documentContainer = document.createElement('template');\n$_documentContainer.setAttribute('style', 'display: none;');\n\n$_documentContainer.innerHTML = `<dom-module id=\"paper-checkbox\">\n  <template strip-whitespace=\"\">\n    <style>\n      :host {\n        display: inline-block;\n        white-space: nowrap;\n        cursor: pointer;\n        --calculated-paper-checkbox-size: var(--paper-checkbox-size, 18px);\n        /* -1px is a sentinel for the default and is replaced in \\`attached\\`. */\n        --calculated-paper-checkbox-ink-size: var(--paper-checkbox-ink-size, -1px);\n        @apply --paper-font-common-base;\n        line-height: 0;\n        -webkit-tap-highlight-color: transparent;\n      }\n\n      :host([hidden]) {\n        display: none !important;\n      }\n\n      :host(:focus) {\n        outline: none;\n      }\n\n      .hidden {\n        display: none;\n      }\n\n      #checkboxContainer {\n        display: inline-block;\n        position: relative;\n        width: var(--calculated-paper-checkbox-size);\n        height: var(--calculated-paper-checkbox-size);\n        min-width: var(--calculated-paper-checkbox-size);\n        margin: var(--paper-checkbox-margin, initial);\n        vertical-align: var(--paper-checkbox-vertical-align, middle);\n        background-color: var(--paper-checkbox-unchecked-background-color, transparent);\n      }\n\n      #ink {\n        position: absolute;\n\n        /* Center the ripple in the checkbox by negative offsetting it by\n         * (inkWidth - rippleWidth) / 2 */\n        top: calc(0px - (var(--calculated-paper-checkbox-ink-size) - var(--calculated-paper-checkbox-size)) / 2);\n        left: calc(0px - (var(--calculated-paper-checkbox-ink-size) - var(--calculated-paper-checkbox-size)) / 2);\n        width: var(--calculated-paper-checkbox-ink-size);\n        height: var(--calculated-paper-checkbox-ink-size);\n        color: var(--paper-checkbox-unchecked-ink-color, var(--primary-text-color));\n        opacity: 0.6;\n        pointer-events: none;\n      }\n\n      #ink:dir(rtl) {\n        right: calc(0px - (var(--calculated-paper-checkbox-ink-size) - var(--calculated-paper-checkbox-size)) / 2);\n        left: auto;\n      }\n\n      #ink[checked] {\n        color: var(--paper-checkbox-checked-ink-color, var(--primary-color));\n      }\n\n      #checkbox {\n        position: relative;\n        box-sizing: border-box;\n        height: 100%;\n        border: solid 2px;\n        border-color: var(--paper-checkbox-unchecked-color, var(--primary-text-color));\n        border-radius: 2px;\n        pointer-events: none;\n        -webkit-transition: background-color 140ms, border-color 140ms;\n        transition: background-color 140ms, border-color 140ms;\n      }\n\n      /* checkbox checked animations */\n      #checkbox.checked #checkmark {\n        -webkit-animation: checkmark-expand 140ms ease-out forwards;\n        animation: checkmark-expand 140ms ease-out forwards;\n      }\n\n      @-webkit-keyframes checkmark-expand {\n        0% {\n          -webkit-transform: scale(0, 0) rotate(45deg);\n        }\n        100% {\n          -webkit-transform: scale(1, 1) rotate(45deg);\n        }\n      }\n\n      @keyframes checkmark-expand {\n        0% {\n          transform: scale(0, 0) rotate(45deg);\n        }\n        100% {\n          transform: scale(1, 1) rotate(45deg);\n        }\n      }\n\n      #checkbox.checked {\n        background-color: var(--paper-checkbox-checked-color, var(--primary-color));\n        border-color: var(--paper-checkbox-checked-color, var(--primary-color));\n      }\n\n      #checkmark {\n        position: absolute;\n        width: 36%;\n        height: 70%;\n        border-style: solid;\n        border-top: none;\n        border-left: none;\n        border-right-width: calc(2/15 * var(--calculated-paper-checkbox-size));\n        border-bottom-width: calc(2/15 * var(--calculated-paper-checkbox-size));\n        border-color: var(--paper-checkbox-checkmark-color, white);\n        -webkit-transform-origin: 97% 86%;\n        transform-origin: 97% 86%;\n        box-sizing: content-box; /* protect against page-level box-sizing */\n      }\n\n      #checkmark:dir(rtl) {\n        -webkit-transform-origin: 50% 14%;\n        transform-origin: 50% 14%;\n      }\n\n      /* label */\n      #checkboxLabel {\n        position: relative;\n        display: inline-block;\n        vertical-align: middle;\n        padding-left: var(--paper-checkbox-label-spacing, 8px);\n        white-space: normal;\n        line-height: normal;\n        color: var(--paper-checkbox-label-color, var(--primary-text-color));\n        @apply --paper-checkbox-label;\n      }\n\n      :host([checked]) #checkboxLabel {\n        color: var(--paper-checkbox-label-checked-color, var(--paper-checkbox-label-color, var(--primary-text-color)));\n        @apply --paper-checkbox-label-checked;\n      }\n\n      #checkboxLabel:dir(rtl) {\n        padding-right: var(--paper-checkbox-label-spacing, 8px);\n        padding-left: 0;\n      }\n\n      #checkboxLabel[hidden] {\n        display: none;\n      }\n\n      /* disabled state */\n\n      :host([disabled]) #checkbox {\n        opacity: 0.5;\n        border-color: var(--paper-checkbox-unchecked-color, var(--primary-text-color));\n      }\n\n      :host([disabled][checked]) #checkbox {\n        background-color: var(--paper-checkbox-unchecked-color, var(--primary-text-color));\n        opacity: 0.5;\n      }\n\n      :host([disabled]) #checkboxLabel  {\n        opacity: 0.65;\n      }\n\n      /* invalid state */\n      #checkbox.invalid:not(.checked) {\n        border-color: var(--paper-checkbox-error-color, var(--error-color));\n      }\n    </style>\n\n    <div id=\"checkboxContainer\">\n      <div id=\"checkbox\" class\\$=\"[[_computeCheckboxClass(checked, invalid)]]\">\n        <div id=\"checkmark\" class\\$=\"[[_computeCheckmarkClass(checked)]]\"></div>\n      </div>\n    </div>\n\n    <div id=\"checkboxLabel\"><slot></slot></div>\n  </template>\n\n  \n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\nPolymer({\n  is: 'paper-checkbox',\n\n  behaviors: [PaperCheckedElementBehavior],\n\n  /** @private */\n  hostAttributes: {role: 'checkbox', 'aria-checked': false, tabindex: 0},\n\n  properties: {\n    /**\n     * Fired when the checked state changes due to user interaction.\n     *\n     * @event change\n     */\n\n    /**\n     * Fired when the checked state changes.\n     *\n     * @event iron-change\n     */\n    ariaActiveAttribute: {type: String, value: 'aria-checked'}\n  },\n\n  attached: function() {\n    // Wait until styles have resolved to check for the default sentinel.\n    // See polymer#4009 for more details.\n    afterNextRender(this, function() {\n      var inkSize =\n          this.getComputedStyleValue('--calculated-paper-checkbox-ink-size')\n              .trim();\n      // If unset, compute and set the default `--paper-checkbox-ink-size`.\n      if (inkSize === '-1px') {\n        var checkboxSizeText =\n            this.getComputedStyleValue('--calculated-paper-checkbox-size')\n                .trim();\n\n        var units = 'px';\n        var unitsMatches = checkboxSizeText.match(/[A-Za-z]+$/);\n        if (unitsMatches !== null) {\n          units = unitsMatches[0];\n        }\n\n        var checkboxSize = parseFloat(checkboxSizeText);\n        var defaultInkSize = (8 / 3) * checkboxSize;\n\n        if (units === 'px') {\n          defaultInkSize = Math.floor(defaultInkSize);\n\n          // The checkbox and ripple need to have the same parity so that their\n          // centers align.\n          if (defaultInkSize % 2 !== checkboxSize % 2) {\n            defaultInkSize++;\n          }\n        }\n\n        this.updateStyles({\n          '--paper-checkbox-ink-size': defaultInkSize + units,\n        });\n      }\n    });\n  },\n\n  _computeCheckboxClass: function(checked, invalid) {\n    var className = '';\n    if (checked) {\n      className += 'checked ';\n    }\n    if (invalid) {\n      className += 'invalid';\n    }\n    return className;\n  },\n\n  _computeCheckmarkClass: function(checked) {\n    return checked ? '' : 'hidden';\n  },\n\n  // create ripple inside the checkboxContainer\n  _createRipple: function() {\n    this._rippleContainer = this.$.checkboxContainer;\n    return PaperInkyFocusBehaviorImpl._createRipple.call(this);\n  }\n\n});\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n/*\nUse `<paper-item-body>` in a `<paper-item>` or `<paper-icon-item>` to make two- or\nthree- line items. It is a flex item that is a vertical flexbox.\n\n    <paper-item>\n      <paper-item-body two-line>\n        <div>Show your status</div>\n        <div secondary>Your status is visible to everyone</div>\n      </paper-item-body>\n    </paper-item>\n\nThe child elements with the `secondary` attribute is given secondary text styling.\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-item-body-two-line-min-height`   | Minimum height of a two-line item          | `72px`\n`--paper-item-body-three-line-min-height` | Minimum height of a three-line item        | `88px`\n`--paper-item-body-secondary-color`       | Foreground color for the `secondary` area  | `--secondary-text-color`\n`--paper-item-body-secondary`             | Mixin applied to the `secondary` area      | `{}`\n\n*/\n/*\n  FIXME(polymer-modulizer): the above comments were extracted\n  from HTML and may be out of place here. Review them and\n  then delete this comment!\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport '@polymer/paper-styles/default-theme.js';\nimport '@polymer/paper-styles/typography.js';\nimport { Polymer } from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        overflow: hidden; /* needed for text-overflow: ellipsis to work on ff */\n        @apply --layout-vertical;\n        @apply --layout-center-justified;\n        @apply --layout-flex;\n      }\n\n      :host([two-line]) {\n        min-height: var(--paper-item-body-two-line-min-height, 72px);\n      }\n\n      :host([three-line]) {\n        min-height: var(--paper-item-body-three-line-min-height, 88px);\n      }\n\n      :host > ::slotted(*) {\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n      }\n\n      :host > ::slotted([secondary]) {\n        @apply --paper-font-body1;\n\n        color: var(--paper-item-body-secondary-color, var(--secondary-text-color));\n\n        @apply --paper-item-body-secondary;\n      }\n    </style>\n\n    <slot></slot>\n`,\n\n  is: 'paper-item-body'\n});\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n/*\n`<paper-icon-item>` is a convenience element to make an item with icon. It is an interactive list\nitem with a fixed-width icon area, according to Material Design. This is useful if the icons are of\nvarying widths, but you want the item bodies to line up. Use this like a `<paper-item>`. The child\nnode with the slot name `item-icon` is placed in the icon area.\n\n    <paper-icon-item>\n      <iron-icon icon=\"favorite\" slot=\"item-icon\"></iron-icon>\n      Favorite\n    </paper-icon-item>\n    <paper-icon-item>\n      <div class=\"avatar\" slot=\"item-icon\"></div>\n      Avatar\n    </paper-icon-item>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property               | Description                                    | Default\n------------------------------|------------------------------------------------|----------\n`--paper-item-icon-width`     | Width of the icon area                         | `56px`\n`--paper-item-icon`           | Mixin applied to the icon area                 | `{}`\n`--paper-icon-item`           | Mixin applied to the item                      | `{}`\n`--paper-item-selected-weight`| The font weight of a selected item             | `bold`\n`--paper-item-selected`       | Mixin applied to selected paper-items                | `{}`\n`--paper-item-disabled-color` | The color for disabled paper-items             | `--disabled-text-color`\n`--paper-item-disabled`       | Mixin applied to disabled paper-items        | `{}`\n`--paper-item-focused`        | Mixin applied to focused paper-items         | `{}`\n`--paper-item-focused-before` | Mixin applied to :before focused paper-items | `{}`\n*/\n/*\n  FIXME(polymer-modulizer): the above comments were extracted\n  from HTML and may be out of place here. Review them and\n  then delete this comment!\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport '@polymer/paper-styles/typography.js';\nimport { PaperItemBehavior } from './paper-item-behavior.js';\nimport './paper-item-shared-styles.js';\nimport { Polymer } from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nPolymer({\n  _template: html`\n    <style include=\"paper-item-shared-styles\"></style>\n    <style>\n      :host {\n        @apply --layout-horizontal;\n        @apply --layout-center;\n        @apply --paper-font-subhead;\n\n        @apply --paper-item;\n        @apply --paper-icon-item;\n      }\n\n      .content-icon {\n        @apply --layout-horizontal;\n        @apply --layout-center;\n\n        width: var(--paper-item-icon-width, 56px);\n        @apply --paper-item-icon;\n      }\n    </style>\n\n    <div id=\"contentIcon\" class=\"content-icon\">\n      <slot name=\"item-icon\"></slot>\n    </div>\n    <slot></slot>\n`,\n\n  is: 'paper-icon-item',\n  behaviors: [PaperItemBehavior]\n});\n","import '@polymer/app-layout/app-header-layout/app-header-layout.js';\nimport '@polymer/app-layout/app-header/app-header.js';\nimport '@polymer/app-layout/app-toolbar/app-toolbar.js';\nimport '@polymer/paper-card/paper-card.js';\nimport '@polymer/paper-checkbox/paper-checkbox.js';\nimport '@polymer/paper-icon-button/paper-icon-button.js';\nimport '@polymer/paper-input/paper-input.js';\nimport '@polymer/paper-item/paper-icon-item.js';\nimport '@polymer/paper-item/paper-item-body.js';\nimport '@polymer/paper-item/paper-item.js';\nimport '@polymer/paper-listbox/paper-listbox.js';\nimport '@polymer/paper-menu-button/paper-menu-button.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport '../../components/ha-menu-button.js';\nimport '../../components/ha-start-voice-button.js';\nimport LocalizeMixin from '../../mixins/localize-mixin.js';\n\n/*\n * @appliesMixin LocalizeMixin\n */\nclass HaPanelShoppingList extends LocalizeMixin(PolymerElement) {\n  static get template() {\n    return html`\n    <style include=\"ha-style\">\n      :host {\n        height: 100%;\n      }\n      app-toolbar paper-listbox {\n        width: 150px;\n      }\n      app-toolbar paper-item {\n        cursor: pointer;\n      }\n      .content {\n        padding-bottom: 32px;\n        max-width: 600px;\n        margin: 0 auto;\n      }\n      paper-card {\n        display: block;\n      }\n      paper-icon-item {\n        border-top: 1px solid var(--divider-color);\n      }\n      paper-icon-item:first-child {\n        border-top: 0;\n      }\n      paper-checkbox {\n        padding: 11px;\n      }\n      paper-input {\n        --paper-input-container-underline: {\n          display: none;\n        }\n        --paper-input-container-underline-focus: {\n          display: none;\n        }\n        position: relative;\n        top: 1px;\n      }\n      .tip {\n        padding: 24px;\n        text-align: center;\n        color: var(--secondary-text-color);\n      }\n    </style>\n\n    <app-header-layout has-scrolling-region>\n      <app-header slot=\"header\" fixed>\n        <app-toolbar>\n          <ha-menu-button narrow='[[narrow]]' show-menu='[[showMenu]]'></ha-menu-button>\n          <div main-title>[[localize('panel.shopping_list')]]</div>\n          <ha-start-voice-button hass='[[hass]]' can-listen='{{canListen}}'></ha-start-voice-button>\n          <paper-menu-button\n            horizontal-align=\"right\"\n            horizontal-offset=\"-5\"\n            vertical-offset=\"-5\"\n          >\n            <paper-icon-button\n              icon=\"hass:dots-vertical\"\n              slot=\"dropdown-trigger\"\n            ></paper-icon-button>\n            <paper-listbox slot=\"dropdown-content\">\n              <paper-item\n                on-click=\"_clearCompleted\"\n              >[[localize('ui.panel.shopping-list.clear_completed')]]</paper-item>\n            </paper-listbox>\n          </paper-menu-button>\n        </app-toolbar>\n      </app-header>\n\n      <div class='content'>\n        <paper-card>\n          <paper-icon-item on-focus='_focusRowInput'>\n            <paper-icon-button\n              slot=\"item-icon\"\n              icon=\"hass:plus\"\n              on-click='_addItem'\n            ></paper-icon-button>\n            <paper-item-body>\n              <paper-input\n                id='addBox'\n                placeholder=\"[[localize('ui.panel.shopping-list.add_item')]]\"\n                on-keydown='_addKeyPress'\n                no-label-float\n              ></paper-input>\n            </paper-item-body>\n          </paper-icon-item>\n\n          <template is='dom-repeat' items='[[items]]'>\n            <paper-icon-item>\n                <paper-checkbox\n                  slot=\"item-icon\"\n                  checked='{{item.complete}}'\n                  on-click='_itemCompleteTapped'\n                  tabindex='0'\n                ></paper-checkbox>\n              <paper-item-body>\n                <paper-input\n                  id='editBox'\n                  no-label-float\n                  value='[[item.name]]'\n                  on-change='_saveEdit'\n                ></paper-input>\n              </paper-item-body>\n            </paper-icon-item>\n          </template>\n        </paper-card>\n        <div class='tip' hidden$='[[!canListen]]'>\n          [[localize('ui.panel.shopping-list.microphone_tip')]]\n        </div>\n      </div>\n    </app-header-layout>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      narrow: Boolean,\n      showMenu: Boolean,\n      canListen: Boolean,\n      items: {\n        type: Array,\n        value: [],\n      },\n    };\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this._fetchData = this._fetchData.bind(this);\n\n    this.hass.connection.subscribeEvents(this._fetchData, 'shopping_list_updated')\n      .then(function (unsub) { this._unsubEvents = unsub; }.bind(this));\n    this._fetchData();\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    if (this._unsubEvents) this._unsubEvents();\n  }\n\n  _fetchData() {\n    this.hass.callApi('get', 'shopping_list')\n      .then(function (items) {\n        items.reverse();\n        this.items = items;\n      }.bind(this));\n  }\n\n  _itemCompleteTapped(ev) {\n    ev.stopPropagation();\n    this.hass.callApi('post', 'shopping_list/item/' + ev.model.item.id, {\n      complete: ev.target.checked\n    }).catch(() => this._fetchData());\n  }\n\n  _addItem(ev) {\n    this.hass.callApi('post', 'shopping_list/item', {\n      name: this.$.addBox.value,\n    }).catch(() => this._fetchData());\n    this.$.addBox.value = '';\n    // Presence of 'ev' means tap on \"add\" button.\n    if (ev) {\n      setTimeout(() => this.$.addBox.focus(), 10);\n    }\n  }\n\n  _addKeyPress(ev) {\n    if (ev.keyCode === 13) {\n      this._addItem();\n    }\n  }\n\n  _saveEdit(ev) {\n    const { index, item } = ev.model;\n    const name = ev.target.value;\n\n    if (name === item.name) {\n      return;\n    }\n\n    this.set(['items', index, 'name'], name);\n    this.hass.callApi('post', 'shopping_list/item/' + item.id, {\n      name: name\n    }).catch(() => this._fetchData());\n  }\n\n  _clearCompleted() {\n    this.hass.callApi('POST', 'shopping_list/clear_completed');\n  }\n}\n\ncustomElements.define('ha-panel-shopping-list', HaPanelShoppingList);\n"],"sourceRoot":""}