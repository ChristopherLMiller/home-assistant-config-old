!function(t){var e={};function o(n){if(e[n])return e[n].exports;var i=e[n]={i:n,l:!1,exports:{}};return t[n].call(i.exports,i,i.exports,o),i.l=!0,i.exports}o.m=t,o.c=e,o.d=function(t,e,n){o.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:n})},o.r=function(t){Object.defineProperty(t,"__esModule",{value:!0})},o.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return o.d(e,"a",e),e},o.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},o.p="/frontend_latest/",o(o.s=160)}({160:function(t,e,o){workbox.setConfig({debug:!1}),workbox.skipWaiting(),workbox.clientsClaim(),workbox.precaching.precacheAndRoute(self.__precacheManifest||[]),workbox.routing.registerRoute(new RegExp(`${location.host}/(static|frontend_latest|frontend_es5)/.+`),workbox.strategies.cacheFirst()),workbox.routing.registerRoute(new RegExp(`${location.host}/api/.*`),workbox.strategies.networkOnly()),workbox.routing.registerRoute(new RegExp(`${location.host}/(service_worker.js|service_worker_es5.js|manifest.json)`),workbox.strategies.networkOnly()),workbox.routing.registerRoute(new RegExp(`${location.host}/.*`),workbox.strategies.staleWhileRevalidate()),function(){function t(t,e){delete t.data.jwt,0===Object.keys(t.data).length&&t.data.constructor===Object&&delete t.data,fetch("/api/notify.html5/callback",{method:"POST",headers:new Headers({"Content-Type":"application/json",Authorization:"Bearer "+e}),body:JSON.stringify(t)})}function e(e,o){t({action:o.action,data:o.notification.data,tag:o.notification.tag,type:e},o.notification.data.jwt)}self.addEventListener("push",function(e){var o;e.data&&(o=e.data.json(),e.waitUntil(self.registration.showNotification(o.title,o).then(function(){t({type:"received",tag:o.tag,data:o.data},o.data.jwt)})))}),self.addEventListener("notificationclick",function(t){var o;e("clicked",t),t.notification.close(),t.notification.data&&t.notification.data.url&&(o=t.notification.data.url)&&t.waitUntil(clients.matchAll({type:"window"}).then(function(t){var e,n;for(e=0;e<t.length;e++)if((n=t[e]).url===o&&"focus"in n)return n.focus();if(clients.openWindow)return clients.openWindow(o)}))}),self.addEventListener("notificationclose",function(t){e("closed",t)})}()}});
//# sourceMappingURL=service-worker-hass.js.map