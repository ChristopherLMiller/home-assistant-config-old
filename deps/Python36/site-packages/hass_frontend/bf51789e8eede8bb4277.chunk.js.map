{"version":3,"sources":["webpack:///./node_modules/@polymer/paper-item/paper-icon-item.js","webpack:///./src/components/ha-sidebar.js"],"names":["_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_6__","__webpack_require__","Object","_polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_5__","a","_template","is","behaviors","_paper_item_behavior_js__WEBPACK_IMPORTED_MODULE_3__","287","module","__webpack_exports__","r","_polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_7__","_mixins_navigate_mixin_js__WEBPACK_IMPORTED_MODULE_10__","_mixins_localize_mixin_js__WEBPACK_IMPORTED_MODULE_11__","customElements","define","template","properties","hass","type","menuShown","Boolean","menuSelected","String","narrow","panels","Array","computed","_mqttLoaded","config","core","components","indexOf","computePanelName","localize","panel","title","computePanels","sortValue","map","logbook","history","result","keys","forEach","key","push","sort","b","aBuiltIn","component_name","bBuiltIn","menuClicked","ev","model","this","selectPanel","item","url_path","attr","target","checks","getAttribute","parentElement","toggleMenu","fire","newChoice","path","document","location","pathname","navigate","handleLogOut"],"mappings":";wIAAAA,EAAAC,EAAA,GAqDAC,OAAAC,EAAAC,EAAAF,EACEG,UAAWL,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;EA2BXM,GAAI,kBACJC,WAAYC,EAAAJ,MAAAK,IAAA,SAAAC,EAAAC,EAAAV,GAAA,aAAAA,EAAAW,EAAAD,GAAAV,EAAA,KAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,KAAAA,EAAA,IAAAA,EAAA,QAAAD,EAAAC,EAAA,GAAAY,EAAAZ,EAAA,GAAAa,GAAAb,EAAA,KAAAA,EAAA,KAAAA,EAAA,KAAAc,EAAAd,EAAA,IC4Kde,eAAeC,OAAO,2BA3OpBf,OAAAa,EAAAX,EA2OoB,CA3ONF,OAAAY,EAAAV,EAAAF,CAAcW,EAAAT,KAC5Bc,sBACE,OAAOlB,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA4HTmB,wBACE,OACEC,MACEC,KAAMnB,QAERoB,WACED,KAAME,SAERC,cACEH,KAAMI,QAERC,OAAQH,QACRI,QACEN,KAAMO,MACNC,SAAU,wBAKhBC,YAAYV,GACV,OAAwD,IAAjDA,EAAKW,OAAOC,KAAKC,WAAWC,QAAQ,QAG7CC,iBAAiBC,EAAUC,GACzB,OAAOD,WAAkBC,EAAMC,UAAYD,EAAMC,MAGnDC,cAAcnB,GACZ,IAAIO,EAASP,EAAKW,OAAOJ,OACrBa,GACFC,IAAK,EACLC,QAAS,EACTC,QAAS,GAEPC,KA6BJ,OA3BA1C,OAAO2C,KAAKlB,GAAQmB,QAAQ,SAAUC,GAChCpB,EAAOoB,GAAKT,OACdM,EAAOI,KAAKrB,EAAOoB,MAIvBH,EAAOK,KAAK,SAAU7C,EAAG8C,GACvB,IAAIC,EAAY/C,EAAEgD,kBAAkBZ,EAChCa,EAAYH,EAAEE,kBAAkBZ,EAEpC,OAAIW,GAAYE,EACPb,EAAUpC,EAAEgD,gBAAkBZ,EAAUU,EAAEE,gBACxCD,GACD,EACCE,EACF,EAGLjD,EAAEkC,MAAQY,EAAEZ,OACN,EAENlC,EAAEkC,MAAQY,EAAEZ,MACP,EAEF,IAGFM,EAGTU,YAAYC,GAEV,GAAIA,EAAGC,MAEL,YADAC,KAAKC,YAAYH,EAAGC,MAAMG,KAAKC,UAIjC,IAEIC,EAFAC,EAASP,EAAGO,OACZC,EAAS,EAGb,GACEF,EAAOC,EAAOE,aAAa,cAC3BF,EAASA,EAAOG,cAChBF,UACOA,EAAS,GAAgB,OAAXD,IAAoBD,GAEvCE,EAAS,GAAgB,OAAXD,GAChBL,KAAKC,YAAYG,GAIrBK,aACET,KAAKU,KAAK,mBAGZT,YAAYU,GACV,GAAkB,WAAdA,EAAJ,CAIA,IAAIC,EAAO,IAAMD,EACbC,IAASC,SAASC,SAASC,UAG/Bf,KAAKgB,SAASJ,QAPZZ,KAAKiB,eAUTA,eACEjB,KAAKU,KAAK","file":"bf51789e8eede8bb4277.chunk.js","sourcesContent":["/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n/*\n`<paper-icon-item>` is a convenience element to make an item with icon. It is an interactive list\nitem with a fixed-width icon area, according to Material Design. This is useful if the icons are of\nvarying widths, but you want the item bodies to line up. Use this like a `<paper-item>`. The child\nnode with the slot name `item-icon` is placed in the icon area.\n\n    <paper-icon-item>\n      <iron-icon icon=\"favorite\" slot=\"item-icon\"></iron-icon>\n      Favorite\n    </paper-icon-item>\n    <paper-icon-item>\n      <div class=\"avatar\" slot=\"item-icon\"></div>\n      Avatar\n    </paper-icon-item>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property               | Description                                    | Default\n------------------------------|------------------------------------------------|----------\n`--paper-item-icon-width`     | Width of the icon area                         | `56px`\n`--paper-item-icon`           | Mixin applied to the icon area                 | `{}`\n`--paper-icon-item`           | Mixin applied to the item                      | `{}`\n`--paper-item-selected-weight`| The font weight of a selected item             | `bold`\n`--paper-item-selected`       | Mixin applied to selected paper-items                | `{}`\n`--paper-item-disabled-color` | The color for disabled paper-items             | `--disabled-text-color`\n`--paper-item-disabled`       | Mixin applied to disabled paper-items        | `{}`\n`--paper-item-focused`        | Mixin applied to focused paper-items         | `{}`\n`--paper-item-focused-before` | Mixin applied to :before focused paper-items | `{}`\n*/\n/*\n  FIXME(polymer-modulizer): the above comments were extracted\n  from HTML and may be out of place here. Review them and\n  then delete this comment!\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport '@polymer/paper-styles/typography.js';\nimport { PaperItemBehavior } from './paper-item-behavior.js';\nimport './paper-item-shared-styles.js';\nimport { Polymer } from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nPolymer({\n  _template: html`\n    <style include=\"paper-item-shared-styles\"></style>\n    <style>\n      :host {\n        @apply --layout-horizontal;\n        @apply --layout-center;\n        @apply --paper-font-subhead;\n\n        @apply --paper-item;\n        @apply --paper-icon-item;\n      }\n\n      .content-icon {\n        @apply --layout-horizontal;\n        @apply --layout-center;\n\n        width: var(--paper-item-icon-width, 56px);\n        @apply --paper-item-icon;\n      }\n    </style>\n\n    <div id=\"contentIcon\" class=\"content-icon\">\n      <slot name=\"item-icon\"></slot>\n    </div>\n    <slot></slot>\n`,\n\n  is: 'paper-icon-item',\n  behaviors: [PaperItemBehavior]\n});\n","import '@polymer/app-layout/app-toolbar/app-toolbar.js';\nimport '@polymer/iron-flex-layout/iron-flex-layout-classes.js';\nimport '@polymer/paper-icon-button/paper-icon-button.js';\nimport '@polymer/paper-item/paper-icon-item.js';\nimport '@polymer/paper-item/paper-item.js';\nimport '@polymer/paper-listbox/paper-listbox.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport '../components/ha-icon.js';\n\nimport '../util/hass-translation.js';\nimport NavigateMixin from '../mixins/navigate-mixin.js';\nimport LocalizeMixin from '../mixins/localize-mixin.js';\n\n/*\n * @appliesMixin LocalizeMixin\n * @appliesMixin NavigateMixin\n */\nclass HaSidebar extends\n  LocalizeMixin(NavigateMixin(PolymerElement)) {\n  static get template() {\n    return html`\n    <style include=\"iron-flex iron-flex-alignment iron-positioning\">\n      :host {\n        --sidebar-text: {\n          color: var(--sidebar-text-color);\n          font-weight: 500;\n          font-size: 14px;\n        };\n        height: 100%;\n        display: block;\n        overflow: auto;\n        -ms-user-select: none;\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        border-right: 1px solid var(--divider-color);\n        background-color: var(--sidebar-background-color, var(--primary-background-color));\n      }\n\n      app-toolbar {\n        font-weight: 400;\n        color: var(--primary-text-color);\n        border-bottom: 1px solid var(--divider-color);\n        background-color: var(--primary-background-color);\n      }\n\n      paper-listbox {\n        padding-bottom: 0;\n      }\n\n      paper-icon-item {\n        --paper-icon-item: {\n          cursor: pointer;\n        };\n\n        --paper-item-icon: {\n          color: var(--sidebar-icon-color);\n        };\n      }\n\n      paper-icon-item.iron-selected {\n        --paper-icon-item: {\n          background-color: var(--sidebar-selected-background-color, var(--paper-grey-200));\n        };\n\n        --paper-item-icon: {\n          color: var(--sidebar-selected-icon-color);\n        };\n      }\n\n      paper-icon-item .item-text {\n        @apply --sidebar-text;\n      }\n      paper-icon-item.iron-selected .item-text {\n          color: var(--sidebar-selected-text-color);\n      }\n\n      paper-icon-item.logout {\n        margin-top: 16px;\n      }\n\n      .divider {\n        height: 1px;\n        background-color: var(--divider-color);\n        margin: 4px 0;\n      }\n\n      .setting {\n        @apply --sidebar-text;\n      }\n\n      .subheader {\n        @apply --sidebar-text;\n        padding: 16px;\n      }\n\n      .dev-tools {\n        color: var(--sidebar-icon-color);\n        padding: 0 8px;\n      }\n    </style>\n\n    <app-toolbar>\n      <div main-title=\"\">Home Assistant</div>\n      <paper-icon-button icon=\"hass:chevron-left\" hidden\\$=\"[[narrow]]\" on-click=\"toggleMenu\"></paper-icon-button>\n    </app-toolbar>\n\n    <paper-listbox attr-for-selected=\"data-panel\" selected=\"[[hass.panelUrl]]\">\n      <paper-icon-item on-click=\"menuClicked\" data-panel=\"states\">\n        <ha-icon slot=\"item-icon\" icon=\"hass:apps\"></ha-icon>\n        <span class=\"item-text\">[[localize('panel.states')]]</span>\n      </paper-icon-item>\n\n      <template is=\"dom-repeat\" items=\"[[panels]]\">\n        <paper-icon-item on-click=\"menuClicked\">\n          <ha-icon slot=\"item-icon\" icon=\"[[item.icon]]\"></ha-icon>\n          <span class=\"item-text\">[[computePanelName(localize, item)]]</span>\n        </paper-icon-item>\n      </template>\n\n      <paper-icon-item on-click=\"menuClicked\" data-panel=\"logout\" class=\"logout\">\n        <ha-icon slot=\"item-icon\" icon=\"hass:exit-to-app\"></ha-icon>\n        <span class=\"item-text\">[[localize('ui.sidebar.log_out')]]</span>\n      </paper-icon-item>\n    </paper-listbox>\n\n    <div>\n      <div class=\"divider\"></div>\n\n      <div class=\"subheader\">[[localize('ui.sidebar.developer_tools')]]</div>\n\n      <div class=\"dev-tools layout horizontal justified\">\n        <paper-icon-button icon=\"hass:remote\" data-panel=\"dev-service\" alt=\"[[localize('panel.dev-services')]]\" title=\"[[localize('panel.dev-services')]]\" on-click=\"menuClicked\"></paper-icon-button>\n        <paper-icon-button icon=\"hass:code-tags\" data-panel=\"dev-state\" alt=\"[[localize('panel.dev-states')]]\" title=\"[[localize('panel.dev-states')]]\" on-click=\"menuClicked\"></paper-icon-button>\n        <paper-icon-button icon=\"hass:radio-tower\" data-panel=\"dev-event\" alt=\"[[localize('panel.dev-events')]]\" title=\"[[localize('panel.dev-events')]]\" on-click=\"menuClicked\"></paper-icon-button>\n        <paper-icon-button icon=\"hass:file-xml\" data-panel=\"dev-template\" alt=\"[[localize('panel.dev-templates')]]\" title=\"[[localize('panel.dev-templates')]]\" on-click=\"menuClicked\"></paper-icon-button>\n        <template is=\"dom-if\" if=\"[[_mqttLoaded(hass)]]\">\n          <paper-icon-button icon=\"hass:altimeter\" data-panel=\"dev-mqtt\" alt=\"[[localize('panel.dev-mqtt')]]\" title=\"[[localize('panel.dev-mqtt')]]\" on-click=\"menuClicked\"></paper-icon-button>\n        </template>\n        <paper-icon-button icon=\"hass:information-outline\" data-panel=\"dev-info\" alt=\"[[localize('panel.dev-info')]]\" title=\"[[localize('panel.dev-info')]]\" on-click=\"menuClicked\"></paper-icon-button>\n      </div>\n    </div>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n      },\n      menuShown: {\n        type: Boolean,\n      },\n      menuSelected: {\n        type: String,\n      },\n      narrow: Boolean,\n      panels: {\n        type: Array,\n        computed: 'computePanels(hass)',\n      },\n    };\n  }\n\n  _mqttLoaded(hass) {\n    return hass.config.core.components.indexOf('mqtt') !== -1;\n  }\n\n  computePanelName(localize, panel) {\n    return localize(`panel.${panel.title}`) || panel.title;\n  }\n\n  computePanels(hass) {\n    var panels = hass.config.panels;\n    var sortValue = {\n      map: 1,\n      logbook: 2,\n      history: 3,\n    };\n    var result = [];\n\n    Object.keys(panels).forEach(function (key) {\n      if (panels[key].title) {\n        result.push(panels[key]);\n      }\n    });\n\n    result.sort(function (a, b) {\n      var aBuiltIn = (a.component_name in sortValue);\n      var bBuiltIn = (b.component_name in sortValue);\n\n      if (aBuiltIn && bBuiltIn) {\n        return sortValue[a.component_name] - sortValue[b.component_name];\n      } else if (aBuiltIn) {\n        return -1;\n      } else if (bBuiltIn) {\n        return 1;\n      }\n      // both not built in, sort by title\n      if (a.title < b.title) {\n        return -1;\n      }\n      if (a.title > b.title) {\n        return 1;\n      }\n      return 0;\n    });\n\n    return result;\n  }\n\n  menuClicked(ev) {\n    // Selection made inside dom-repeat\n    if (ev.model) {\n      this.selectPanel(ev.model.item.url_path);\n      return;\n    }\n\n    let target = ev.target;\n    let checks = 5;\n    let attr;\n\n    do {\n      attr = target.getAttribute('data-panel');\n      target = target.parentElement;\n      checks--;\n    } while (checks > 0 && target !== null && !attr);\n\n    if (checks > 0 && target !== null) {\n      this.selectPanel(attr);\n    }\n  }\n\n  toggleMenu() {\n    this.fire('hass-close-menu');\n  }\n\n  selectPanel(newChoice) {\n    if (newChoice === 'logout') {\n      this.handleLogOut();\n      return;\n    }\n    var path = '/' + newChoice;\n    if (path === document.location.pathname) {\n      return;\n    }\n    this.navigate(path);\n  }\n\n  handleLogOut() {\n    this.fire('hass-logout');\n  }\n}\n\ncustomElements.define('ha-sidebar', HaSidebar);\n"],"sourceRoot":""}